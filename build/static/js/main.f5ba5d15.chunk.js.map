{"version":3,"sources":["assets/sass/components/layout/SnapshotSelector.module.scss","assets/sass/components/layout/Item.module.scss","assets/sass/components/sleep/tooltips/PieTooltip.module.scss","assets/sass/components/sleep/GraphTypeButton.module.scss","assets/sass/components/sleep/Info.module.scss","assets/sass/components/sleep/SleepDuration.module.scss","assets/sass/components/sleep/WakeMood.module.scss","assets/sass/components/layout/Footer.module.scss","assets/sass/components/layout/Menu.module.scss","assets/sass/components/layout/LoadingSpinner.module.scss","infrastructure/CsvFileReader.ts","assets/sass/components/sleep/graphs/SleepQualityPieChart.module.scss","assets/sass/components/layout/ActivityRings.module.scss","assets/sass/components/layout/HealthInfo.module.scss","assets/sass/components/sleep/MiscInfo.module.scss","domain/Page.ts","domain/SnapshotDates.ts","infrastructure/context/SnapshotContextProvider.tsx","layout/SnapshotSelector.tsx","domain/GitInformation.ts","domain/BuildInfo.ts","domain/AppInformation.ts","layout/HealthInfo.tsx","layout/Header.tsx","layout/Footer.tsx","layout/Item.tsx","layout/Menu.tsx","layout/ActivityRings.tsx","layout/LoadingSpinner.tsx","components/sleep/SleepInfoCard.tsx","converters/SleepDataConverter.ts","infrastructure/RestClient.tsx","infrastructure/repository/SleepDataRepository.ts","service/SleepService.ts","components/sleep/tooltips/PieTooltip.tsx","types/GraphType.ts","components/GraphContainer.tsx","components/sleep/graphs/SleepQualityPieChart.tsx","components/sleep/GraphTypeButton.tsx","components/sleep/tooltips/ScatterTooltip.tsx","utility/Arrays.ts","components/sleep/graphs/SleepScatterGraph.tsx","components/sleep/tooltips/AreaTooltip.tsx","domain/Mood.ts","components/sleep/graphs/SleepAreaGraph.tsx","components/sleep/Info.tsx","components/sleep/SleepDuration.tsx","domain/SoundThreshold.ts","components/sleep/WakeMood.tsx","components/sleep/SoundsRecorded.tsx","components/sleep/MiscInfo.tsx","components/sleep/tooltips/BarTooltip.tsx","components/sleep/graphs/SleepBarGraph.tsx","components/sleep/graphs/SleepGraph.tsx","pages/Sleep.tsx","components/overview/OverviewGraph.tsx","pages/Overview.tsx","pages/Gym.tsx","pages/Running.tsx","layout/Main.tsx","infrastructure/repository/InfoRepository.ts","converters/InfoConverter.ts","service/InfoService.ts","App.tsx","index.tsx","assets/sass/components/sleep/tooltips/ScatterTooltip.module.scss","assets/sass/components/sleep/SleepInfoCard.module.scss","assets/sass/components/sleep/SoundsRecorded.module.scss","assets/sass/components/sleep/tooltips/AreaTooltip.module.scss","assets/sass/components/sleep/tooltips/BarTooltip.module.scss","assets/sass/components/layout/Main.module.scss","assets/sass/components/layout/Header.module.scss"],"names":["module","exports","CsvFileReader","dataDirectory","path","join","process","cwd","fileName","delimiter","result","Papa","parse","this","getFileContents","header","skipEmptyLines","complete","results","data","errors","forEach","e","console","log","file","fs","readdirSync","find","ReferenceError","filePath","readFileSync","Page","SnapshotDates","dates","Map","page","set","has","get","SnapshotContext","createContext","snapshots","SnapshotContextProvider","props","useState","undefined","Provider","value","children","SnapshotSelector","select","snapshot","setState","selected","isDisabled","state","bind","snapshotDates","setSelected","NavDropdown","title","getTitle","id","className","styles","onSelect","disabled","Item","key","eventKey","Divider","getDates","SLEEP","map","date","context","latest","Component","contextType","GitInformation","branch","hash","BuildInfo","version","AppInformation","git","build","gitInformation","buildInfo","empty","HealthInfo","renderTooltip","info","getAppInformation","getGitInfo","getBuildInfo","Popover","tooltip","Title","heading","fixedWidth","icon","faHammer","hammer","Content","label","href","getBranchURI","target","getBranch","getCommitURI","getHash","getDate","getVersion","isActive","OverlayTrigger","placement","delay","show","hide","overlay","trigger","faInfoCircle","Header","Navbar","bg","variant","fixed","Brand","alt","src","width","height","logo","Toggle","Collapse","Nav","Link","link","faGithub","size","github","Footer","Container","fluid","footer","name","to","Menu","active","activeKey","nav","faHome","faRunning","faDumbbell","faMoon","ActivityRings","svg","viewBox","ring","move","background","cx","cy","r","strokeWidth","completed","strokeDasharray","exercise","stand","LoadingSpinner","wrapper","SleepInfoCard","unit","Card","card","Row","row","Col","lg","xs","faCircle","circle","start","end","Number","suffix","duration","SleepDataConverter","startDate","endDate","isNap","sleepQuality","awakeTime","remSleep","lightSleep","deepSleep","soundsRecorded","mood","graphData","slice","startTime","moment","format","endTime","filterInvalidData","convertSnapshot","latestSnapshot","filter","sessions","time","quality","nap","awake","rem","light","deep","RestClient","endpoint","makeRestRequest","body","method","host","URI","fetch","headers","JSON","stringify","then","response","a","ok","json","status","Error","statusText","catch","SleepDataRepository","reader","converter","csv","read","convert","SleepService","repository","initialise","convertInitialiseResponseData","getSnapshot","convertSnapshotData","PieTooltip","GraphType","payload","toFixed","GraphContainer","SleepQualityPieChart","getSectorColourMappings","entry","i","fill","getSleepQualityLabel","createGraphData","nameKey","dataKey","innerRadius","animationBegin","paddingAngle","position","content","stroke","GraphTypeButton","option","selectedType","onChange","default","options","UNKNOWN","Dropdown","dropdown","toggle","ScatterTooltip","Arrays","min","arr","reduce","p","v","max","SleepScatterGraph","onClickScatter","onSelectedSession","getEarliestDate","brushStartIndex","brushEndIndex","getBrushEndIndex","type","tickFormatter","xAxisFormatter","domain","yAxisDomain","range","cursor","endIndex","getBrushFilteredData","length","onClick","isAnimationActive","datum","Date","Math","round","durations","floor","ceil","tickItem","AreaTooltip","Mood","SleepAreaGraph","onClickArea","activeDot","animationDuration","Info","Tooltip","text","onMouseEnter","onMouseLeave","SleepDuration","container","faClock","SoundThreshold","WakeMood","getClass","targetMood","inactive","faGrinBeam","GREAT","faSmile","GOOD","faMeh","OK","faFrown","NOT_SO_GOOD","faTired","BAD","getThreshold","quantity","LOWER","MIDDLE","UPPER","FLOOR","SoundsRecorded","threshold","column","faVolumeMute","middleColumn","ProgressBar","now","getBarFillPercentage","bar","faVolumeUp","MiscInfo","BarTooltip","SleepBarGraph","onClickBar","SleepGraph","onClickSleepSession","selectedSessionData","selectedSession","miscInfo","handleGraphTypeChange","selectedGraphType","getMostRecentSleepSessionData","getMostRecentSleepSession","AREA","Body","SCATTER","BAR","renderLeadingGraph","md","sm","formatDateTitle","d","sessionData","b","Sleep","sleepData","loading","getSleepSessionQuantity","faBed","getAverageSleepQuality","getTotalHoursSlept","sum","val","hours","OverviewGraph","extractOverviewData","angle","textAnchor","barSize","barGap","extracted","Object","keys","includes","obj","split","Overview","workouts","Gym","Running","MainLayout","appInfo","sidebar","exact","component","InfoRepository","message","InfoConverter","commit","gitInfo","abbrev","InfoService","config","autoAddCss","NProgress","configure","showSpinner","easing","App","getInfo","storeSnapshotDates","basename","Main","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f5ba5d15.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"snapshot\":\"SnapshotSelector_snapshot__2KC6N\",\"dropdown-item\":\"SnapshotSelector_dropdown-item__f-ugm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"overview\":\"Item_overview__3yfsQ\",\"running\":\"Item_running__25ZW5\",\"sleep\":\"Item_sleep__35QY5\",\"gym\":\"Item_gym__24UYo\",\"name\":\"Item_name__2eqDG\",\"link\":\"Item_link__3MxjN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"PieTooltip_label__17eDk\",\"value\":\"PieTooltip_value__HkPIG\",\"wrapper\":\"PieTooltip_wrapper__O9AJR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dropdown\":\"GraphTypeButton_dropdown__1_3pn\",\"toggle\":\"GraphTypeButton_toggle__1adpG\",\"option\":\"GraphTypeButton_option__2jT7X\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"text\":\"Info_text__3huSi\",\"icon\":\"Info_icon__11jyR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"SleepDuration_container__25vi6\",\"icon\":\"SleepDuration_icon__rUc4y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"active\":\"WakeMood_active__1TDqL\",\"inactive\":\"WakeMood_inactive__3Bzrp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"Footer_footer__1lUBm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Menu_nav__1MWIC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"LoadingSpinner_wrapper__ox_oc\",\"loading\":\"LoadingSpinner_loading__2n0NN\",\"rings\":\"LoadingSpinner_rings__SQqXJ\"};","import fs from 'fs'\r\nimport path from 'path'\r\nimport Papa from 'papaparse';\r\n\r\nclass CsvFileReader {\r\n    private readonly dataDirectory = path.join(process.cwd(), 'public/data')\r\n\r\n    read(fileName: string, delimiter: string): unknown[] {\r\n        \r\n        const result = Papa.parse(this.getFileContents(fileName), {\r\n            delimiter: delimiter,\r\n            header: true,\r\n            skipEmptyLines: true,\r\n            complete: results => {\r\n                return results.data\r\n            }\r\n        });\r\n\r\n        if (result.errors) {\r\n            result.errors.forEach(e => {\r\n                console.log(e);\r\n            });\r\n        }\r\n\r\n        return result.data;\r\n    }\r\n\r\n    private getFileContents(fileName: string) {\r\n        const filenames = fs.readdirSync(this.dataDirectory)\r\n        const file = filenames.find(e => e === fileName);\r\n\r\n        if (!file) {\r\n            throw new ReferenceError('Unknown File: ' + fileName)\r\n        }\r\n        const filePath = path.join(this.dataDirectory, file)\r\n        return fs.readFileSync(filePath, 'utf8')\r\n    }\r\n}\r\n\r\nexport default CsvFileReader;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"SleepQualityPieChart_label__3Fz-p\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"svg\":\"ActivityRings_svg__D8inG\",\"ring\":\"ActivityRings_ring__2VugV\",\"completed\":\"ActivityRings_completed__11Psa\",\"RingProgress\":\"ActivityRings_RingProgress__1UE21\",\"move\":\"ActivityRings_move__H8Hfy\",\"background\":\"ActivityRings_background__3Vfwa\",\"exercise\":\"ActivityRings_exercise__Ds09J\",\"stand\":\"ActivityRings_stand__1wvwX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"icon\":\"HealthInfo_icon__11liw\",\"hammer\":\"HealthInfo_hammer__1DMwg\",\"tooltip\":\"HealthInfo_tooltip__jXNB5\",\"label\":\"HealthInfo_label__2uvzQ\",\"value\":\"HealthInfo_value__UiHGI\",\"heading\":\"HealthInfo_heading__DG2wT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"MiscInfo_container__3S1Fs\",\"row\":\"MiscInfo_row__3Ilej\",\"value\":\"MiscInfo_value__2Ye_4\",\"icon\":\"MiscInfo_icon__3b_mi\"};","export enum Page {\r\n    SLEEP\r\n}","import { Page } from './Page';\r\n\r\nexport class SnapshotDates {\r\n    private dates = new Map<Page, string[]>()\r\n\r\n    add(page: Page, dates: string[]) {\r\n        this.dates.set(page, dates);\r\n    }\r\n\r\n    getDates(page: Page): string[] {\r\n        if (this.dates.has(page)) {\r\n            return this.dates.get(page);\r\n        }\r\n        return [];\r\n    }\r\n}","import { createContext, useState } from 'react';\r\nimport { SnapshotDates } from '../../domain/SnapshotDates';\r\nimport React from 'react';\r\n\r\nexport interface Snapshots {\r\n    sleep: string[];\r\n}\r\n\r\nexport interface SnapshotContextProps {\r\n    snapshots?: SnapshotDates;\r\n    selected?: string;\r\n    latest?: string;\r\n}\r\n\r\nexport const SnapshotContext = createContext<SnapshotContextProps>({\r\n    snapshots: new SnapshotDates()\r\n});\r\n\r\n\r\nconst SnapshotContextProvider = (props) => {\r\n    const [snapshots, setSnapshots] = useState<SnapshotDates>(undefined);\r\n\r\n    const storeSnapshotDates = (snapshotDates: SnapshotDates) => {\r\n        setSnapshots(snapshotDates);\r\n    }\r\n\r\n    return (\r\n        <SnapshotContext.Provider value={{ snapshots }}>\r\n            {props.children}\r\n        </SnapshotContext.Provider>\r\n    )\r\n}\r\n\r\nexport default SnapshotContextProvider;","import { NavDropdown } from 'react-bootstrap';\r\nimport React, { Component } from 'react';\r\nimport { Page } from '../domain/Page';\r\nimport { SnapshotDates } from '../domain/SnapshotDates';\r\nimport SnapshotContextProvider from '../infrastructure/context/SnapshotContextProvider';\r\nimport { SnapshotContext } from '../infrastructure/context/SnapshotContextProvider';\r\nimport styles from '../assets/sass/components/layout/SnapshotSelector.module.scss'\r\n\r\ninterface SnapshotSelectorProps {\r\n    snapshotDates: SnapshotDates;\r\n}\r\n\r\ninterface SnapshotSelectorState {\r\n    selected: string;\r\n    isDisabled: boolean;\r\n    snapshotDates: SnapshotDates;\r\n}\r\n\r\nclass SnapshotSelector extends Component<SnapshotSelectorProps, SnapshotSelectorState> {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = this.select.bind(this);\r\n        this.state = {\r\n            selected: \"Snapshot\",\r\n            isDisabled: false,\r\n            snapshotDates: new SnapshotDates()\r\n        }\r\n    }\r\n\r\n    select = (snapshot) => {\r\n        this.setState({ selected: snapshot, isDisabled: true });\r\n        this.setState({ isDisabled: false });\r\n    }\r\n\r\n    render() {\r\n        const { isDisabled, selected } = this.state;\r\n        const mostRecent = \"Stubbed\"\r\n\r\n        return (\r\n            <>\r\n                <SnapshotContextProvider setSelected={this.state.selected} />\r\n                <NavDropdown title={this.getTitle()} id=\"snapshot-dropdown\" className={styles.snapshot} onSelect={this.select} disabled={isDisabled}>\r\n                    <NavDropdown.Item className={styles.selected} key={mostRecent} eventKey={mostRecent}>\r\n                        Most Recent\r\n                </NavDropdown.Item>\r\n                    <NavDropdown.Divider />\r\n                    {\r\n                        this.state.snapshotDates.getDates(Page.SLEEP).map(date => {\r\n                            return (\r\n                                <NavDropdown.Item className={styles.date} key={date} eventKey={date} disabled={selected === date}>\r\n                                    {date}\r\n                                </NavDropdown.Item>\r\n                            )\r\n                        })\r\n                    }\r\n                </NavDropdown>\r\n            </>\r\n        );\r\n    }\r\n\r\n    private getTitle() {\r\n        const { selected } = this.state;\r\n        return this.context.latest === selected ? \"Snapshot\" : selected;\r\n    }\r\n}\r\n\r\nSnapshotSelector.contextType = SnapshotContext;\r\nexport default SnapshotSelector;","export class GitInformation {\r\n    private readonly branch: string;\r\n    private readonly hash: string;\r\n    private readonly date: string;\r\n\r\n    constructor(branch: string, hash: string, date: string) {\r\n        this.branch = branch;\r\n        this.hash = hash;\r\n        this.date = date;\r\n    }\r\n\r\n    static empty() {\r\n        return new GitInformation(\"N/A\", \"N/A\", \"N/A\");\r\n    }\r\n\r\n    getBranch(): string {\r\n        return this.branch;\r\n    }\r\n\r\n    getBranchURI(): string {\r\n        //return process.env.NEXT_PUBLIC_API_GIT_BRANCH_URI + this.branch;\r\n        return \"https://github.com/TomPlum/activity-trends-api/tree/\" + this.branch;\r\n    }\r\n\r\n    getHash(): string {\r\n        return this.hash;\r\n    }\r\n\r\n    getCommitURI(): string {\r\n        //return process.env.NEXT_PUBLIC_API_GIT_COMMIT_URI + this.hash;\r\n        return \"https://github.com/TomPlum/activity-trends-api/commit/\" + this.hash;\r\n    }\r\n\r\n    getDate(): string {\r\n        return this.date;\r\n    }\r\n}","export class BuildInfo {\r\n    private readonly version: string;\r\n\r\n    constructor(version: string) {\r\n        this.version = version;\r\n    }\r\n\r\n    static empty() {\r\n        return new BuildInfo(\"N/A\");\r\n    }\r\n\r\n    getVersion(): string {\r\n        return this.version;\r\n    }\r\n}","import { GitInformation } from './GitInformation';\r\nimport { BuildInfo } from './BuildInfo';\r\n\r\nexport class AppInformation {\r\n    private readonly gitInformation: GitInformation;\r\n    private readonly buildInfo: BuildInfo;\r\n\r\n    constructor(git: GitInformation, build: BuildInfo) {\r\n        this.gitInformation = git;\r\n        this.buildInfo = build;\r\n    }\r\n\r\n    static empty(): AppInformation {\r\n        return new AppInformation(GitInformation.empty(), BuildInfo.empty());\r\n    }\r\n\r\n    getGitInfo(): GitInformation {\r\n        return this.gitInformation;\r\n    }\r\n\r\n    getBuildInfo(): BuildInfo {\r\n        return this.buildInfo;\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport { OverlayTrigger, Popover } from 'react-bootstrap';\r\nimport { faHammer, faInfoCircle } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { AppInformation } from '../domain/AppInformation';\r\nimport styles from '../assets/sass/components/layout/HealthInfo.module.scss';\r\n\r\ninterface HealthInfoProps {\r\n    info: AppInformation;\r\n}\r\n\r\ninterface HealthInfoState {\r\n    isActive: boolean;\r\n}\r\n\r\nclass HealthInfo extends Component<HealthInfoProps, HealthInfoState> {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isActive: false\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <OverlayTrigger\r\n                placement=\"bottom\"\r\n                delay={{ show: 100, hide: 2000 }}\r\n                overlay={this.renderTooltip}\r\n                trigger={[\"hover\", \"focus\"]}\r\n            >\r\n                <FontAwesomeIcon\r\n                    fixedWidth\r\n                    className={styles.icon}\r\n                    icon={faInfoCircle}\r\n                />\r\n            </OverlayTrigger>\r\n        );\r\n    }\r\n\r\n    renderTooltip = (props) => {\r\n        const info = this.getAppInformation();\r\n        const git = info.getGitInfo();\r\n        const build = info.getBuildInfo();\r\n\r\n        return (\r\n            <Popover id=\"health\" className={styles.tooltip} {...props}>\r\n                <Popover.Title className={styles.heading}>\r\n                    <FontAwesomeIcon fixedWidth icon={faHammer} className={styles.hammer}/>{' '}Latest Build\r\n                </Popover.Title>\r\n\r\n                <Popover.Content>\r\n                    <p className={styles.label}>Branch:\r\n                        <a href={git.getBranchURI()} target=\"_blank\">\r\n                            <span className={styles.value}>{git.getBranch()}</span>\r\n                        </a>\r\n                    </p>\r\n                    <p className={styles.label}>Hash:\r\n                        <a href={git.getCommitURI()} target=\"_blank\">\r\n                            <span className={styles.value}>{git.getHash()}</span>\r\n                        </a>\r\n                    </p>\r\n                    <p className={styles.label}>Date:\r\n                        <span className={styles.value}>{git.getDate()}</span>\r\n                    </p>\r\n                    <p className={styles.label}>Ver:\r\n                        <span className={styles.value}>{build.getVersion()}</span>\r\n                    </p>\r\n                </Popover.Content>\r\n            </Popover>\r\n        );\r\n    }\r\n\r\n    private getAppInformation(): AppInformation {\r\n        return this.props.info ? this.props.info : AppInformation.empty();\r\n    }\r\n}\r\n\r\nexport default HealthInfo;","import { Navbar, Nav } from 'react-bootstrap';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faGithub } from '@fortawesome/free-brands-svg-icons'\r\nimport React, { Component } from 'react';\r\nimport SnapshotSelector from './SnapshotSelector';\r\nimport { SnapshotDates } from '../domain/SnapshotDates';\r\nimport HealthInfo from './HealthInfo';\r\nimport { AppInformation } from '../domain/AppInformation';\r\nimport { GitInformation } from '../domain/GitInformation';\r\nimport { BuildInfo } from '../domain/BuildInfo';\r\nimport styles from '../assets/sass/components/layout/Header.module.scss'\r\n\r\ninterface HeaderProps {\r\n    snapshotDates: SnapshotDates;\r\n    appInfo: AppInformation;\r\n}\r\n\r\nclass Header extends Component<HeaderProps> {\r\n    render() {\r\n        return (\r\n            <Navbar bg=\"dark\" variant=\"dark\" fixed=\"top\" className={styles.header}>\r\n                <Navbar.Brand>\r\n                    <img\r\n                        alt=\"activity-rings-logo\"\r\n                        src={process.env.REACT_APP_BASE_PATH + \"logo.png\"}\r\n                        width=\"30px\"\r\n                        height=\"30px\"\r\n                        className={styles.logo}\r\n                    />{' '}\r\n                    Activity Trends\r\n                </Navbar.Brand>\r\n                <Navbar.Toggle />\r\n\r\n                <Navbar.Collapse className=\"justify-content-end\">\r\n                    <HealthInfo info={new AppInformation(new GitInformation(\"dev\", \"a834kda\", \"17/10/2020\"), new BuildInfo(\"1.0.0\"))}/>\r\n                    <SnapshotSelector snapshotDates={this.props.snapshotDates} />\r\n                    <Nav>\r\n                        <Nav.Link target=\"_blank\" href=\"https://www.github.com/TomPlum\" className={styles.link}>\r\n                            <FontAwesomeIcon icon={faGithub} size=\"lg\" fixedWidth className={styles.github} />\r\n                        </Nav.Link>\r\n                    </Nav>\r\n                </Navbar.Collapse>\r\n            </Navbar>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Header;","import { Container, Navbar } from 'react-bootstrap'\r\nimport styles from '../assets/sass/components/layout/Footer.module.scss'\r\nimport React, { Component } from 'react';\r\n\r\n\r\nclass Footer extends Component {\r\n    render() {\r\n        return (\r\n            <Container fluid>\r\n                <Navbar bg=\"light\" variant=\"light\" fixed=\"bottom\" className={styles.footer}>\r\n                    <Navbar.Brand>\r\n                        Created by Thomas Plumpton\r\n                    </Navbar.Brand>\r\n                </Navbar>\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Footer;","import React, { Component } from \"react\";\r\nimport { Nav } from 'react-bootstrap';\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { IconDefinition } from \"@fortawesome/fontawesome-svg-core\";\r\nimport { Link } from \"react-router-dom\"\r\nimport styles from '../assets/sass/components/layout/Item.module.scss';\r\n\r\ninterface ItemProps {\r\n    name: string;\r\n    icon: IconDefinition;\r\n    page: string;\r\n    className?: string;\r\n}\r\n\r\nclass Item extends Component<ItemProps> {\r\n    render() {\r\n        const { name, icon, page, className } = this.props;\r\n        return (\r\n            <Nav.Item>\r\n                <Link to={page} className={styles.link} eventKey={name}>\r\n                    <FontAwesomeIcon\r\n                        icon={icon}\r\n                        className={styles[className]}\r\n                        fixedWidth\r\n                    />\r\n                    <p className={styles.name}>{name}</p>\r\n                </Link>\r\n            </Nav.Item>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Item;","import React, { Component } from \"react\";\r\nimport { Nav } from \"react-bootstrap\";\r\nimport { faRunning, faMoon, faHome, faDumbbell } from '@fortawesome/free-solid-svg-icons';\r\nimport Item from \"./Item\";\r\nimport styles from '../assets/sass/components/layout/Menu.module.scss';\r\n\r\nclass Menu extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            active: undefined\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Nav activeKey=\"/\" className={styles.nav + \" flex-column\"}>\r\n                <Item name=\"Overview\" icon={faHome} page=\"/\" className=\"overview\" />\r\n                <Item name=\"Running\" icon={faRunning} page=\"/running\" className=\"running\" />\r\n                <Item name=\"Gym\" icon={faDumbbell} page=\"/gym\" className=\"gym\" />\r\n                <Item name=\"Sleep\" icon={faMoon} page=\"/sleep\" className=\"sleep\" />\r\n            </Nav>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Menu;","import React from 'react';\r\nimport styles from '../assets/sass/components/layout/ActivityRings.module.scss'\r\n\r\nconst ActivityRings = () => {\r\n    return (\r\n        <svg className={styles.svg} viewBox='0 0 37 37'>\r\n            <g className={styles.ring + \" \" + styles.move}>\r\n                <circle className={styles.background}\r\n                    cx=\"50%\" cy=\"50%\"\r\n                    r=\"15.915\"\r\n                    strokeWidth=\"3\"\r\n                />\r\n                <circle className={styles.completed}\r\n                    cx=\"50%\" cy=\"50%\"\r\n                    r=\"15.915\"\r\n                    strokeWidth=\"3\"\r\n                    strokeDasharray=\"100, 100\"\r\n                />\r\n            </g>\r\n\r\n            <g className={styles.ring + \" \" + styles.exercise}>\r\n                <circle className={styles.background}\r\n                    cx=\"50%\" cy=\"50%\"\r\n                    r=\"15.915\"\r\n                    strokeWidth=\"4\"\r\n                />\r\n                <circle className={styles.completed}\r\n                    cx=\"50%\" cy=\"50%\"\r\n                    r=\"15.915\"\r\n                    strokeWidth=\"4\"\r\n                    strokeDasharray=\"100, 100\"\r\n                />\r\n            </g>\r\n\r\n            <g className={styles.ring + \" \" + styles.stand}>\r\n                <circle className={styles.background}\r\n                    cx=\"50%\" cy=\"50%\"\r\n                    r=\"15.915\"\r\n                    strokeWidth=\"6\"\r\n                />\r\n                <circle className={styles.completed}\r\n                    cx=\"50%\" cy=\"50%\"\r\n                    r=\"15.915\"\r\n                    strokeWidth=\"6\"\r\n                    strokeDasharray=\"100, 100\"\r\n                />\r\n            </g>\r\n        </svg>\r\n    );\r\n}\r\n\r\nexport default ActivityRings;","import ActivityRings from './ActivityRings';\r\nimport React from 'react';\r\nimport styles from '../assets/sass/components/layout/LoadingSpinner.module.scss';\r\n\r\nconst LoadingSpinner = ({active}) => {\r\n    if (active) {\r\n        return (\r\n            <div className={styles.wrapper}>\r\n                <ActivityRings />\r\n                {/* <p className={styles.loading}>Loading...</p> */}\r\n            </div>\r\n        );\r\n    }\r\n    return null;\r\n}\r\n\r\nexport default LoadingSpinner;","import React, { Component } from 'react';\r\nimport { Card, Row, Col } from 'react-bootstrap';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { IconDefinition } from '@fortawesome/fontawesome-svg-core';\r\nimport { faCircle} from '@fortawesome/free-solid-svg-icons';\r\nimport Countup from 'react-countup';\r\nimport styles from '../../assets/sass/components/sleep/SleepInfoCard.module.scss';\r\n\r\nexport interface SleepInfoCardProps {\r\n    value: number,\r\n    unit?: string;\r\n    title: string,\r\n    icon: IconDefinition\r\n}\r\n\r\nclass SleepInfoCard extends Component<SleepInfoCardProps> {\r\n    render() {\r\n        const { value, title, icon, unit } = this.props;\r\n        return (\r\n            <Card className={styles.card}>\r\n                <Row className={styles.row}>\r\n                    <Col lg={4} xs={4}>\r\n                        <span className=\"fa-layers fa-5x\">\r\n                            <FontAwesomeIcon icon={faCircle} className={styles.circle} />\r\n                            <FontAwesomeIcon icon={icon} className={styles.icon} />\r\n                        </span>\r\n                    </Col>\r\n                    <Col lg={8} xs={8}>\r\n                        <Countup start={0} end={Number(value)} suffix={unit} duration={2} className={styles.value} />\r\n                        <h6 className={styles.title}>{title}</h6>\r\n                    </Col>\r\n                </Row>\r\n            </Card>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SleepInfoCard;","import { SleepGraphMainData } from \"../components/sleep/graphs/SleepGraph\";\r\nimport { Mood } from \"../domain/Mood\";\r\nimport moment from \"moment\";\r\n\r\nexport interface SleepData {\r\n    startDate: string,\r\n    endDate: string,\r\n    duration: number,\r\n    isNap: boolean,\r\n    sleepQuality: number,\r\n    awakeTime: number,\r\n    remSleep: number,\r\n    lightSleep: number,\r\n    deepSleep: number,\r\n    soundsRecorded: number,\r\n    mood: string\r\n}\r\n\r\nclass SleepDataConverter {\r\n    convert(data: any[]): SleepData[] {\r\n        return data.map(row => {\r\n            return {\r\n                startDate: row[\"Start Time\"],\r\n                endDate: row[\"End Time\"],\r\n                duration: Number(row[\"Duration (mins)\"]),\r\n                isNap: row[\"Nap\"] == \"YES\",\r\n                sleepQuality: Number(row[\"Sleep Quality (%)\"]),\r\n                awakeTime: Number(row[\"Time Awake (mins)\"]),\r\n                remSleep: Number(row[\"Time in REM Slep (mins)\"]),\r\n                lightSleep: Number(row[\"Time in Light Sleep (mins)\"]),\r\n                deepSleep: Number(row[\"Time In Deep Sleep (mins)\"]),\r\n                soundsRecorded: Number(row[\"Sounds Recorded\"]),\r\n                mood: row[\"Wake-up mood\"]\r\n            }\r\n        });\r\n    }\r\n\r\n    convertToMainGraphData(data: SleepData[]): SleepGraphMainData[] {\r\n        const graphData = data.map(e => {\r\n            const startDate = e.startDate.slice(0, -6);\r\n            const endDate = e.endDate.slice(0, -6);\r\n            return {\r\n                date: startDate,\r\n                startTime: moment(startDate).format(\"HH:mm\"),\r\n                endTime: moment(endDate).format(\"HH:mm\"),\r\n                duration: e.duration / 60,\r\n                sleepQuality: e.sleepQuality,\r\n                isNap: e.isNap,\r\n                awakeTime: e.awakeTime / 60,\r\n                remSleep: e.remSleep / 60,\r\n                lightSleep: e.lightSleep / 60,\r\n                deepSleep: e.deepSleep / 60,\r\n                soundsRecorded: e.soundsRecorded,\r\n                mood: e.mood as Mood\r\n            }\r\n        });\r\n\r\n        return this.filterInvalidData(graphData);\r\n    }\r\n\r\n    convertInitialiseResponseData(data: any): SleepGraphMainData[] {\r\n        return this.convertSnapshot(data.latestSnapshot).filter(e => e.duration > 3 && e.duration < 12 && !e.isNap && e.sleepQuality > 0);\r\n    }\r\n\r\n    convertSnapshotData(data: any): SleepGraphMainData[] {\r\n        const graphData = this.convertSnapshot(data);\r\n        return this.filterInvalidData(graphData);\r\n    }\r\n\r\n    private filterInvalidData(data: SleepGraphMainData[]): SleepGraphMainData[] {\r\n        return data.filter(e => e.duration > 3 && e.duration < 12 && !e.isNap && e.sleepQuality > 0);\r\n    }\r\n\r\n    private convertSnapshot(data: any) {\r\n        return data.sessions.map( e => {\r\n            const startDate = e.startDate.slice(0, -6);\r\n            const endDate = e.endDate.slice(0, -6);\r\n            const time = e.time;\r\n            return {\r\n                date: startDate,\r\n                startTime: moment(startDate).format(\"HH:mm\"),\r\n                endTime: moment(endDate).format(\"HH:mm\"),\r\n                duration: e.duration / 60,\r\n                sleepQuality: e.quality,\r\n                isNap: e.nap,\r\n                awakeTime: time.awake / 60,\r\n                remSleep: time.rem / 60,\r\n                lightSleep: time.light / 60,\r\n                deepSleep: time.deep / 60,\r\n                soundsRecorded: e.soundsRecorded,\r\n                mood: e.mood as Mood\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nexport default SleepDataConverter;","import fetch from 'isomorphic-unfetch';\r\n\r\nclass RestClient {\r\n    private static readonly host = process.env.REACT_APP_BACKEND_URL\r\n\r\n    static async get<T>(endpoint: string): Promise<APIResponse<T>> {\r\n        return await RestClient.makeRestRequest<T>(\"GET\", undefined, endpoint);\r\n    }\r\n\r\n    static async post<T>(endpoint: string, body: {}):  Promise<APIResponse<T>> {\r\n        return await RestClient.makeRestRequest<T>(\"POST\", body, endpoint);\r\n    }\r\n    \r\n\r\n    private static async makeRestRequest<T>(method: string, body: object, endpoint: string): Promise<APIResponse<T>> {\r\n        if (!this.host) {\r\n            throw new ReferenceError('Host URI is not defined!');\r\n        }\r\n\r\n        if (!endpoint) {\r\n            throw new ReferenceError(\"Endpoint is not defined!\");\r\n        }\r\n\r\n        const URI = this.host + endpoint;\r\n        console.log(\"Sending \" + method + \" request to \" + URI);\r\n\r\n        return await fetch(URI, {\r\n            method: method,\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n            },\r\n            body: body ? JSON.stringify(body) : undefined\r\n        }).then(async response => {\r\n            if (response.ok) {\r\n                const json = await response.json() as Promise<T>\r\n                console.log(\"Sucessfully received \" + response.status + \" response\", json);\r\n                return {\r\n                    data: json,\r\n                    errors: []\r\n                };\r\n            } else {\r\n                return {\r\n                    data: undefined,\r\n                    errors: [new Error(response.statusText)]\r\n                };\r\n            }\r\n        }).catch(e => {\r\n            console.log(\"An error occurred while making a request to \" + endpoint, e);\r\n            return {\r\n                data: undefined,\r\n                errors: [new Error(e)]\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nexport interface APIResponse<T> {\r\n    data: Promise<T>;\r\n    errors: Error[];\r\n}\r\n\r\nexport default RestClient;","import CsvFileReader from \"../CsvFileReader\";\r\nimport SleepDataConverter from \"../../converters/SleepDataConverter\";\r\nimport RestClient from \"../RestClient\";\r\nimport { SleepInitialiseData } from '../../types/Sleep';\r\n\r\nexport class SleepDataRepository {\r\n    private readonly reader = new CsvFileReader();\r\n    private readonly converter = new SleepDataConverter();\r\n\r\n    read() {\r\n        const csv = this.reader.read('sleep.csv', ', ');\r\n        return this.converter.convert(csv);\r\n    }\r\n\r\n    async initialise(): Promise<SleepInitialiseData> {\r\n        const response = await RestClient.get<SleepInitialiseData>('/sleep/initialise')\r\n    \r\n        if (response.data) {\r\n            return response.data;\r\n        }\r\n    }\r\n\r\n    async getSnapshot(date: string) {\r\n        return await RestClient.get('/sleep/snapshot/' + date)\r\n    }\r\n}","import { SleepDataRepository } from '../infrastructure/repository/SleepDataRepository';\r\nimport SleepDataConverter from '../converters/SleepDataConverter';\r\n\r\nexport class SleepService {\r\n    private readonly repository = new SleepDataRepository();\r\n    private readonly converter = new SleepDataConverter()\r\n\r\n    async initialise() {\r\n        const data = await this.repository.initialise();\r\n        return this.converter.convertInitialiseResponseData(data);\r\n    }\r\n\r\n    async getSnapshot(date: string) {\r\n        const data = await this.repository.getSnapshot(date);\r\n        return this.converter.convertSnapshotData(data);\r\n    }\r\n}","import React from 'react';\r\nimport styles from '../../../assets/sass/components/sleep/tooltips/PieTooltip.module.scss';\r\n\r\nconst PieTooltip = ({ active, payload }) => {\r\n    if (active) {\r\n        return (\r\n            <div className={styles.wrapper}>\r\n                <p className={styles.value}>\r\n                    <span className={styles.label}>{payload[0].name}: </span>\r\n                    {formatValue(payload[0].value)}\r\n                </p>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return null;\r\n};\r\n\r\nfunction formatValue(value: number): string {\r\n    return value.toFixed(1) + \" hours\";\r\n}\r\n\r\nexport default PieTooltip;","export enum GraphType {\r\n    AREA = \"Area\",\r\n    SCATTER = \"Scatter\",\r\n    BAR = \"Bar\",\r\n    UNKNOWN = \"Unknown\"\r\n}","import React from 'react';\r\nimport { ResponsiveContainer } from 'recharts';\r\n\r\nexport interface GraphContainerProps {\r\n    title: string;\r\n}\r\n\r\nconst GraphContainer = ({ children }) => {\r\n    return (\r\n        <ResponsiveContainer width=\"100%\" height={350}>\r\n            {children}\r\n        </ResponsiveContainer>\r\n    );\r\n};\r\n\r\nexport default GraphContainer;","import React, { Component } from \"react\";\r\nimport { PieChart, Pie, Tooltip, Cell, Label, Legend } from 'recharts';\r\nimport PieTooltip from \"../tooltips/PieTooltip\";\r\nimport GraphContainer from '../../GraphContainer';\r\nimport styles from '../../../assets/sass/components/sleep/graphs/SleepQualityPieChart.module.scss';\r\n\r\ninterface SleepQualityPieChartProps {\r\n    data: SleepQualityPieChartData\r\n}\r\n\r\nexport interface SleepQualityPieChartData {\r\n    awakeTime: number,\r\n    remSleep: number,\r\n    lightSleep: number,\r\n    deepSleep: number,\r\n    sleepQuality: number\r\n}\r\n\r\nclass SleepQualityPieChart extends Component<SleepQualityPieChartProps> {\r\n    render() {\r\n        const data = this.createGraphData();\r\n        return (\r\n            <GraphContainer>\r\n                <PieChart>\r\n                    <Pie data={data} nameKey=\"name\" dataKey=\"value\" innerRadius=\"40%\" animationBegin={0} paddingAngle={5}>\r\n                        <Label className={styles.label} position=\"center\" value={this.getSleepQualityLabel()} />\r\n                        {this.getSectorColourMappings(data)}\r\n                    </Pie>\r\n                    <Tooltip content={props => <PieTooltip {...props} />} />\r\n                    <Legend />\r\n                </PieChart>\r\n            </GraphContainer>\r\n        );\r\n    }\r\n\r\n    private getSectorColourMappings = data => data.map((entry, i) => <Cell key={`cell-${i}`} fill={entry.fill} />)\r\n\r\n    private getSleepQualityLabel = () => this.props.data.sleepQuality + \"%\";\r\n\r\n    private createGraphData() {\r\n        const { data } = this.props;\r\n        return [\r\n            { name: \"Awake Time\", value: data.awakeTime, fill: \"rgba(247, 163, 52, 0.6)\", stroke: \"rgba(247, 163, 52, 1)\" },\r\n            { name: \"REM Sleep\", value: data.remSleep, fill: \"rgba(240, 101, 210, 0.6)\",  stroke: \"rgba(240, 101, 210, 1)\" },\r\n            { name: \"Light Sleep\", value: data.lightSleep, fill: \"rgba(80, 217, 108, 0.6)\", stroke: \"rgba(80, 217, 108, 1)\" },\r\n            { name: \"Deep Sleep\", value: data.deepSleep, fill: \"rgba(52, 179, 247, 0.6)\", stroke: \"rgba(52, 179, 247, 1)\" }\r\n        ];\r\n    }\r\n}\r\n\r\nexport default SleepQualityPieChart;","import React, { Component } from \"react\";\r\nimport { Dropdown } from \"react-bootstrap\";\r\nimport { GraphType } from \"../../types/GraphType\";\r\nimport styles from \"../../assets/sass/components/sleep/GraphTypeButton.module.scss\";\r\n\r\ninterface GraphTypeButtonProps {\r\n    onChange: (option) => void;\r\n    options: GraphType[];\r\n    default?: GraphType;\r\n}\r\n\r\ninterface GraphTypeButtonState {\r\n    selectedType: GraphType;\r\n}\r\n\r\nclass GraphTypeButton extends Component<GraphTypeButtonProps, GraphTypeButtonState> {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            selectedType: props.default ? props.default : props.options ? props.options[0] : GraphType.UNKNOWN\r\n        }\r\n    }\r\n\r\n    onSelect = (option) => {\r\n        this.setState({ selectedType: option })\r\n        this.props.onChange(option);\r\n    }\r\n\r\n    render() {\r\n        const { selectedType } = this.state;\r\n        return (\r\n            <Dropdown className={styles.dropdown} onSelect={this.onSelect}>\r\n                <Dropdown.Toggle \r\n                    className={styles.toggle}\r\n                    variant=\"link\">{this.state.selectedType}\r\n                </Dropdown.Toggle>\r\n\r\n                <Dropdown.Menu>\r\n                    {\r\n                        this.props.options.filter(option => option != selectedType).map(option => {\r\n                            return <Dropdown.Item\r\n                                className={styles.option}\r\n                                key={option}\r\n                                eventKey={option}>\r\n                                {option}\r\n                            </Dropdown.Item>\r\n                        })\r\n                    }\r\n                </Dropdown.Menu>\r\n            </Dropdown>\r\n        )\r\n    }\r\n}\r\n\r\nexport default GraphTypeButton;","import React from 'react';\r\nimport moment from 'moment';\r\nimport styles from '../../../assets/sass/components/sleep/tooltips/ScatterTooltip.module.scss';\r\n\r\nconst ScatterTooltip = ({ active, payload }) => {\r\n    if (active) {\r\n        return (\r\n            <div className={styles.wrapper}>\r\n                <p className={styles.value}>\r\n                    <span className={styles.label}>Date: </span>\r\n                    {formatDate(payload[0].value)}\r\n                </p>\r\n                <p className={styles.value}>\r\n                    <span className={styles.label}>Duration: </span>\r\n                    {formatDuration(payload[1].value)}\r\n                </p>\r\n                <p className={styles.value}>\r\n                    <span className={styles.label}>Sleep Quality: </span>\r\n                    {formatSleepQuality(payload[2].value)}\r\n                </p>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return null;\r\n};\r\n\r\nfunction formatDate(date: string): string {\r\n    return moment(date).format(\"Mo MMM YYYY HH:MM\")\r\n}\r\n\r\nfunction formatDuration(duration: number): string {\r\n    return duration.toFixed(1) + \" hours\";\r\n}\r\n\r\nfunction formatSleepQuality(quality: number): string {\r\n    return quality + \"%\";\r\n}\r\n\r\nexport default ScatterTooltip;","export class Arrays {\r\n    static min = (arr: number[]) => arr.reduce((p, v) => (p < v ? p : v));\r\n    \r\n    static max = (arr: number[]) => arr.reduce((p, v) => (p > v ? p : v));\r\n}","import React, { Component } from \"react\";\r\nimport { CartesianGrid, ScatterChart, XAxis, YAxis, ZAxis, Tooltip, Scatter, Brush } from 'recharts';\r\nimport ScatterTooltip from \"../tooltips/ScatterTooltip\";\r\nimport { SleepGraphMainData } from \"./SleepGraph\";\r\nimport { Arrays } from '../../../utility/Arrays';\r\nimport moment from \"moment\";\r\nimport GraphContainer from \"../../GraphContainer\";\r\n\r\ninterface SleepScatterGraphProps {\r\n    data: SleepGraphMainData[];\r\n    onSelectedSession: (session) => void;\r\n}\r\n\r\ninterface SleepScatterGraphState {\r\n    brushStartIndex: string;\r\n    brushEndIndex: string;\r\n}\r\n\r\nclass SleepScatterGraph extends Component<SleepScatterGraphProps, SleepScatterGraphState> {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            brushStartIndex: this.getEarliestDate(),\r\n            brushEndIndex: this.getBrushEndIndex()\r\n        }\r\n    }\r\n\r\n    onClickScatter = (selected) => {\r\n        this.props.onSelectedSession({\r\n            data: {\r\n                awakeTime: selected.awakeTime,\r\n                deepSleep: selected.deepSleep,\r\n                lightSleep: selected.lightSleep,\r\n                remSleep: selected.remSleep,\r\n                sleepQuality: selected.sleepQuality,\r\n            },\r\n            date: selected.date,\r\n            startTime: selected.startTime,\r\n            endTime: selected.endTime,\r\n            duration: selected.duration,\r\n            soundsRecorded: selected.soundsRecorded,\r\n            mood: selected.mood\r\n        });\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <GraphContainer>\r\n                <ScatterChart data={this.props.data}>\r\n                    <CartesianGrid strokeDasharray=\"3 3\" />\r\n                    <XAxis dataKey=\"date\" name=\"Date\" type=\"category\" tickFormatter={this.xAxisFormatter} />\r\n                    <YAxis dataKey=\"duration\" name=\"Duration\" type=\"number\" unit=\" hrs\" domain={this.yAxisDomain()} />\r\n                    <ZAxis dataKey=\"sleepQuality\" range={[1, 300]} name=\"Sleep Quality\" unit=\"%\" />\r\n                    <Tooltip cursor={{ strokeDasharray: '3 3' }} content={props => <ScatterTooltip {...props} />} />\r\n                    <Brush\r\n                        dataKey='date'\r\n                        height={30}\r\n                        stroke=\"#8884d8\"\r\n                        tickFormatter={this.xAxisFormatter}\r\n                        endIndex={this.getBrushFilteredData().length}\r\n                        onChange={({ brushStartIndex, brushEndIndex }) => this.setState({ brushStartIndex, brushEndIndex })}\r\n                    />\r\n                    <Scatter\r\n                        name=\"Sleep Sessions\"\r\n                        data={this.getBrushFilteredData()}\r\n                        fill=\"rgba(136, 132, 216, 0.7)\"\r\n                        onClick={this.onClickScatter}\r\n                        isAnimationActive={true}\r\n                    />\r\n                </ScatterChart>\r\n            </GraphContainer>\r\n        );\r\n    }\r\n\r\n    private getBrushFilteredData() {\r\n        const { brushStartIndex, brushEndIndex } = this.state;\r\n        return this.props.data.filter(datum => new Date(datum.date) >= new Date(brushStartIndex) && new Date(datum.date) <= new Date(brushEndIndex));\r\n    }\r\n\r\n    private getEarliestDate = () => this.props.data[0].date;\r\n    \r\n    private getBrushEndIndex() {\r\n        const { data } = this.props;\r\n        return data[Math.round(data.length / 5)].date;\r\n    }\r\n\r\n    private yAxisDomain(): number[] {\r\n        const data = this.props.data;\r\n        const durations = data.map(e => e.duration);\r\n        const minDuration = Math.floor(Arrays.min(durations));\r\n        const maxDuration = Math.ceil(Arrays.max(durations));\r\n        return [minDuration, maxDuration];\r\n    }\r\n\r\n    private xAxisFormatter(tickItem: string) {\r\n        return moment(tickItem).format(\"MMM YY\")\r\n    }\r\n}\r\n\r\nexport default SleepScatterGraph;","import React from 'react';\r\nimport moment from 'moment';\r\nimport styles from '../../../assets/sass/components/sleep/tooltips/AreaTooltip.module.scss';\r\n\r\nconst AreaTooltip = ({ active, payload }) => {\r\n    if (active) {\r\n        return (\r\n            <div className={styles.wrapper}>\r\n                <p className={styles.value}>\r\n                    <span className={styles.label}>Date: </span>\r\n                    {formatDate(payload[0].payload.date)}\r\n                </p>\r\n\r\n                <p className={styles.value}>\r\n                    <span className={styles.label}>Sleep Quality: </span>\r\n                    {formatSleepQuality(payload[0].value)}\r\n                </p>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return null;\r\n};\r\n\r\nfunction formatDate(date: string): string {\r\n    return moment(date).format(\"Mo MMM YYYY HH:MM\")\r\n}\r\n\r\nfunction formatSleepQuality(value: number): string {\r\n    return value.toFixed(0) + \"%\";\r\n}\r\n\r\nexport default AreaTooltip;","export enum Mood {\r\n    GREAT = \"Great\",\r\n    GOOD = \"Good\",\r\n    OK = \"Ok\",\r\n    NOT_SO_GOOD = \"Not Good\",\r\n    BAD = \"Bad\",\r\n    UNKNOWN = \"N/A\"\r\n}","import React, { Component } from \"react\";\r\nimport { AreaChart, CartesianGrid, XAxis, Tooltip, Area, YAxis, Brush } from 'recharts';\r\nimport { SleepGraphMainData } from './SleepGraph';\r\nimport { Arrays } from '../../../utility/Arrays';\r\nimport moment from \"moment\";\r\nimport AreaTooltip from \"../tooltips/AreaTooltip\";\r\nimport GraphContainer from '../../GraphContainer';\r\nimport styles from '../../../assets/sass/components/sleep/graphs/SleepAreaGraph.module.scss';\r\n\r\ninterface SleepAreaGraphProps {\r\n    data: SleepGraphMainData[];\r\n    onSelectedSession: (session) => void;\r\n}\r\n\r\nclass SleepAreaGraph extends Component<SleepAreaGraphProps> {\r\n    onClickArea = (selected) => {\r\n        const payload = selected.payload;\r\n        this.props.onSelectedSession({\r\n            data: {\r\n                awakeTime: payload.awakeTime,\r\n                deepSleep: payload.deepSleep,\r\n                lightSleep: payload.lightSleep,\r\n                remSleep: payload.remSleep,\r\n                sleepQuality: payload.sleepQuality,\r\n                mood: payload.mood\r\n            },\r\n            date: payload.date,\r\n            startTime: payload.startTime,\r\n            endTime: payload.endTime,\r\n            soundsRecorded: payload.soundsRecorded,\r\n            duration: payload.duration,\r\n            mood: payload.mood\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <GraphContainer>\r\n                <AreaChart data={this.props.data}>\r\n                    <CartesianGrid strokeDasharray=\"3 3\" />\r\n                    <XAxis dataKey=\"date\" name=\"Date\" tickFormatter={this.xAxisFormatter} />\r\n                    <YAxis type=\"number\" name=\"Sleep Quality\" unit=\"%\" domain={this.yAxisDomain()} />\r\n                    <Tooltip content={props => <AreaTooltip {...props}/>} />\r\n                    <Area\r\n                        type=\"monotone\"\r\n                        dataKey=\"sleepQuality\"\r\n                        stroke=\"#8884d8\"\r\n                        fill=\"#8884d8\"\r\n                        activeDot={{ onClick: this.onClickArea }}\r\n                        animationDuration={2200}\r\n                    />\r\n                    <Brush\r\n                        dataKey='date'\r\n                        height={30}\r\n                        stroke=\"#8884d8\"\r\n                        endIndex={this.getBrushEndIndex()}\r\n                        tickFormatter={this.xAxisFormatter}\r\n                    />\r\n                </AreaChart>\r\n            </GraphContainer>\r\n        )\r\n    }\r\n\r\n    private yAxisDomain(): number[] {\r\n        const data = this.props.data;\r\n        const quality = data.map(e => e.sleepQuality);\r\n        const minQuality = Math.floor(Arrays.min(quality));\r\n        const maxQuality = Math.ceil(Arrays.max(quality));\r\n        return [minQuality - 5, maxQuality];\r\n    }\r\n\r\n    private xAxisFormatter = (tickItem: string) => moment(tickItem).format(\"MMM YY\")\r\n\r\n    private getBrushEndIndex = () => Math.round(this.props.data.length / 10)\r\n}\r\n\r\nexport default SleepAreaGraph;","import { faInfoCircle } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { OverlayTrigger, Tooltip } from 'react-bootstrap';\r\nimport React, { Component } from 'react';\r\nimport styles from '../../assets/sass/components/sleep/Info.module.scss';\r\n\r\ninterface InfoProps {\r\n    text?: string;\r\n}\r\n\r\ninterface InfoState {\r\n    isActive: boolean;\r\n}\r\n\r\nclass Info extends Component<InfoProps, InfoState> {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isActive: false\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <OverlayTrigger\r\n                placement=\"right\"\r\n                delay={{ show: 100, hide: 250 }}\r\n                overlay={this.renderTooltip}>\r\n                <FontAwesomeIcon\r\n                    fixedWidth\r\n                    className={styles.icon}\r\n                    icon={faInfoCircle}\r\n                    onMouseEnter={() => this.setState({ isActive: true })}\r\n                    onMouseLeave={() => this.setState({ isActive: false })}\r\n                />\r\n            </OverlayTrigger>\r\n        );\r\n    }\r\n\r\n    renderTooltip = (props) => {\r\n        return (\r\n            <Tooltip className={styles.text} {...props}>\r\n                {this.props.text}\r\n            </Tooltip>\r\n        );\r\n    }\r\n\r\n};\r\n\r\nexport default Info;","import React, { Component } from 'react';\r\nimport { Container } from 'react-bootstrap';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faClock } from '@fortawesome/free-solid-svg-icons';\r\nimport styles from '../../assets/sass/components/sleep/SleepDuration.module.scss';\r\n\r\ninterface SleepDurationProps {\r\n    duration: number;\r\n}\r\n\r\nclass SleepDuration extends Component<SleepDurationProps> {\r\n    render() {\r\n        return (\r\n            <Container className={styles.container}>\r\n                <FontAwesomeIcon icon={faClock} className={styles.icon} />\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SleepDuration;","export enum SoundThreshold {\r\n    UPPER = 30,\r\n    MIDDLE = 10,\r\n    LOWER = 5,\r\n    FLOOR = 0\r\n}\r\n\r\nexport function getThreshold(quantity) {\r\n    if (quantity >= SoundThreshold.LOWER && quantity < SoundThreshold.MIDDLE) {\r\n        return SoundThreshold.LOWER;\r\n    }\r\n\r\n    if (quantity >= SoundThreshold.MIDDLE && quantity < SoundThreshold.UPPER) {\r\n        return SoundThreshold.MIDDLE;\r\n    }\r\n\r\n    if (quantity >= SoundThreshold.UPPER) {\r\n        return SoundThreshold.UPPER;\r\n    }\r\n\r\n    return SoundThreshold.FLOOR;\r\n}\r\n\r\n","import React, { Component } from \"react\";\r\nimport { Mood } from '../../domain/Mood';\r\nimport { Container } from 'react-bootstrap';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faGrinBeam, faSmile, faMeh, faFrown, faTired, faMehBlank, } from '@fortawesome/free-solid-svg-icons';\r\nimport styles from '../../assets/sass/components/sleep/WakeMood.module.scss';\r\n\r\ninterface WakeMoodProps {\r\n    mood: Mood;\r\n}\r\n\r\nclass WakeMood extends Component<WakeMoodProps> {\r\n    render() {\r\n        return (\r\n            <Container>\r\n                <FontAwesomeIcon icon={faGrinBeam} className={this.getClass(Mood.GREAT)} />\r\n                <FontAwesomeIcon icon={faSmile} className={this.getClass(Mood.GOOD)} />\r\n                <FontAwesomeIcon icon={faMeh} className={this.getClass(Mood.OK)} />\r\n                <FontAwesomeIcon icon={faFrown} className={this.getClass(Mood.NOT_SO_GOOD)} />\r\n                <FontAwesomeIcon icon={faTired} className={this.getClass(Mood.BAD)} />\r\n            </Container>\r\n        );\r\n    }\r\n\r\n    private getClass = (targetMood: Mood) => this.props.mood === targetMood ? styles.active : styles.inactive\r\n    \r\n}\r\n\r\nexport default WakeMood;","import React, { Component } from 'react';\r\nimport { Container, ProgressBar, Row, Col } from 'react-bootstrap';\r\nimport { SoundThreshold, getThreshold } from '../../domain/SoundThreshold';\r\nimport { faVolumeUp, faVolumeMute } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport styles from '../../assets/sass/components/sleep/SoundsRecorded.module.scss';\r\n\r\ninterface SoundsRecordedProps {\r\n    quantity: number;\r\n}\r\n\r\nclass SoundsRecorded extends Component<SoundsRecordedProps> {\r\n    render() {\r\n        return (\r\n            <Container>\r\n                <Row>\r\n                    <Col xs={3} className={styles.column}>\r\n                        <FontAwesomeIcon icon={faVolumeMute} fixedWidth className={this.getClass(SoundThreshold.FLOOR)} />\r\n                    </Col>\r\n                    <Col xs={6} className={styles.middleColumn}>\r\n                        <ProgressBar now={this.getBarFillPercentage()} className={styles.bar} />\r\n                    </Col>\r\n                    <Col xs={3} className={styles.column}>\r\n                        <FontAwesomeIcon icon={faVolumeUp} fixedWidth className={this.getClass(SoundThreshold.UPPER)} />\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        );\r\n    }\r\n\r\n    private getClass = (threshold: SoundThreshold) => getThreshold(this.props.quantity) === threshold ? styles.active : styles.inactive\r\n\r\n    private getBarFillPercentage() {\r\n        const threshold = getThreshold(this.props.quantity);\r\n        switch (threshold) {\r\n            case SoundThreshold.FLOOR: return 0;\r\n            case SoundThreshold.LOWER: return 25;\r\n            case SoundThreshold.MIDDLE: return 50;\r\n            case SoundThreshold.UPPER: return 75;\r\n            default: return 0;\r\n        }\r\n    }\r\n}\r\n\r\nexport default SoundsRecorded;","import React, { Component } from \"react\";\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\nimport { Mood } from \"../../domain/Mood\";\r\nimport SleepDuration from \"./SleepDuration\";\r\nimport WakeMood from './WakeMood';\r\nimport SoundsRecorded from './SoundsRecorded';\r\nimport styles from '../../assets/sass/components/sleep/MiscInfo.module.scss'\r\n\r\ninterface MiscInfoProps {\r\n    data: MiscInfoData;\r\n}\r\n\r\nexport interface MiscInfoData {\r\n    soundsRecorded: number;\r\n    mood: Mood;\r\n    duration: number;\r\n}\r\n\r\nclass MiscInfo extends Component<MiscInfoProps> {\r\n    render() {\r\n        const { soundsRecorded, mood, duration } = this.props.data;\r\n\r\n        return (\r\n            <Container className={styles.container}>\r\n                <Row className={styles.row}>\r\n                    <Col xs={8}>\r\n                        <SoundsRecorded quantity={soundsRecorded} />\r\n                    </Col>\r\n                    <Col xs={4}>\r\n                        <h1 className={styles.value}>{soundsRecorded}</h1>\r\n                        <h5 className={styles.title}>Sounds Recorded</h5>\r\n                    </Col>\r\n                </Row>\r\n                <Row className={styles.row}>\r\n                    <Col xs={8}>\r\n                        <WakeMood mood={mood}/>\r\n                    </Col>\r\n                    <Col xs={4}>\r\n                        <h1 className={styles.value}>{mood}</h1>\r\n                        <h5 className={styles.title}>Wake-Up Mood</h5>\r\n                    </Col>\r\n                </Row>\r\n                <Row className={styles.row}>\r\n                    <Col xs={8}>\r\n                        <SleepDuration duration={duration}/>\r\n                    </Col>\r\n                    <Col xs={4}>\r\n                        <h1 className={styles.value}>{duration.toFixed(1)}h</h1>\r\n                        <h5 className={styles.title}>Duration Slept</h5>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n\r\nexport default MiscInfo;","import React from 'react';\r\nimport moment from 'moment';\r\nimport styles from '../../../assets/sass/components/sleep/tooltips/BarTooltip.module.scss';\r\n\r\nconst BarTooltip = ({ active, payload }) => {\r\n    if (active) {\r\n        return (\r\n            <div className={styles.wrapper}>\r\n                <p className={styles.value}>\r\n                    <span className={styles.label}>Date: </span>\r\n                    {formatDate(payload[0].payload.date)}\r\n                </p>\r\n\r\n                <p className={styles.value}>\r\n                    <span className={styles.label}>Sleep Quality: </span>\r\n                    {formatSleepQuality(payload[0].value)}\r\n                </p>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return null;\r\n};\r\n\r\nfunction formatDate(date: string): string {\r\n    return moment(date).format(\"Mo MMM YYYY HH:MM\")\r\n}\r\n\r\nfunction formatSleepQuality(value: number): string {\r\n    return value.toFixed(0) + \"%\";\r\n}\r\n\r\nexport default BarTooltip;","import React, { Component } from \"react\";\r\nimport { SleepGraphMainData } from \"./SleepGraph\";\r\nimport GraphContainer from \"../../GraphContainer\";\r\nimport { BarChart, CartesianGrid, XAxis, YAxis, Tooltip, Bar, Brush } from 'recharts';\r\nimport moment from \"moment\";\r\nimport BarTooltip from \"../tooltips/BarTooltip\";\r\n\r\ninterface SleepBarGraphProps {\r\n    data: SleepGraphMainData[];\r\n    onSelectedSession: (session) => void;\r\n}\r\n\r\nclass SleepBarGraph extends Component<SleepBarGraphProps> {\r\n    onClickBar = (selected) => {\r\n        const payload = selected.payload;\r\n        this.props.onSelectedSession({\r\n            data: {\r\n                awakeTime: payload.awakeTime,\r\n                deepSleep: payload.deepSleep,\r\n                lightSleep: payload.lightSleep,\r\n                remSleep: payload.remSleep,\r\n                sleepQuality: payload.sleepQuality,\r\n                mood: payload.mood\r\n            },\r\n            date: payload.date,\r\n            startTime: payload.startTime,\r\n            endTime: payload.endTime,\r\n            soundsRecorded: payload.soundsRecorded,\r\n            duration: payload.duration,\r\n            mood: payload.mood\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <GraphContainer>\r\n                <BarChart data={this.props.data}>\r\n                    <CartesianGrid strokeDasharray=\"3 3\" />\r\n                    <XAxis dataKey=\"date\" name=\"Date\" tickFormatter={this.xAxisFormatter} />\r\n                    <YAxis unit=\"%\" name=\"Sleep Quality\" />\r\n                    <Tooltip content={(props) => <BarTooltip {...props} />} />\r\n                    <Brush\r\n                        dataKey='date'\r\n                        height={30}\r\n                        stroke=\"#8884d8\"\r\n                        endIndex={this.getBrushEndIndex()}\r\n                        tickFormatter={this.xAxisFormatter}\r\n                    />\r\n                    <Bar\r\n                        dataKey=\"sleepQuality\"\r\n                        fill=\"rgba(136, 132, 216, 0.6)\"\r\n                        stroke=\"#8884d8\"\r\n                        onClick={this.onClickBar}\r\n                        animationDuration={2200}\r\n                    />\r\n                </BarChart>\r\n            </GraphContainer>\r\n        );\r\n    }\r\n\r\n    private xAxisFormatter = (tickItem: string) => moment(tickItem).format(\"MMM YY\")\r\n\r\n    private getBrushEndIndex = () => Math.round(this.props.data.length / 20)\r\n}\r\n\r\nexport default SleepBarGraph;","import React, { Component } from 'react';\r\nimport { Card, Col, Row } from 'react-bootstrap';\r\nimport SleepQualityPieChart, { SleepQualityPieChartData } from \"./SleepQualityPieChart\";\r\nimport GraphTypeButton from '../GraphTypeButton';\r\nimport { GraphType } from '../../../types/GraphType';\r\nimport SleepScatterGraph from './SleepScatterGraph';\r\nimport SleepAreaGraph from './SleepAreaGraph';\r\nimport Info from '../Info';\r\nimport MiscInfo, { MiscInfoData } from '../MiscInfo';\r\nimport { Mood } from '../../../domain/Mood';\r\nimport moment from 'moment';\r\nimport SleepBarGraph from './SleepBarGraph';\r\n\r\ninterface SleepGraphMainProps {\r\n    data: SleepGraphMainData[]\r\n}\r\n\r\ninterface SleepGraphState {\r\n    selectedSessionData: SleepQualityPieChartData;\r\n    selectedSession: SelectedSessionInfo;\r\n    selectedGraphType: GraphType;\r\n}\r\n\r\ninterface SelectedSessionInfo {\r\n    date: string,\r\n    startTime: string,\r\n    endTime: string,\r\n    miscInfo: MiscInfoData\r\n}\r\n\r\nexport interface SleepGraphMainData {\r\n    date: string,\r\n    startTime: string,\r\n    endTime: string,\r\n    duration: number,\r\n    sleepQuality: number,\r\n    isNap: boolean,\r\n    awakeTime: number,\r\n    lightSleep: number,\r\n    deepSleep: number,\r\n    remSleep: number,\r\n    soundsRecorded: number,\r\n    mood: Mood\r\n}\r\n\r\nclass SleepGraph extends Component<SleepGraphMainProps, SleepGraphState> {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            selectedSessionData: this.getMostRecentSleepSessionData(),\r\n            selectedSession: this.getMostRecentSleepSession(),\r\n            selectedGraphType: GraphType.AREA\r\n        }\r\n    }\r\n\r\n    onClickSleepSession = (response) => {\r\n        const { data, date, startTime, endTime, soundsRecorded, duration, mood } = response;\r\n        this.setState({\r\n            selectedSessionData: data,\r\n            selectedSession: {\r\n                date,\r\n                startTime,\r\n                endTime,\r\n                miscInfo: {\r\n                    soundsRecorded,\r\n                    mood,\r\n                    duration\r\n                }\r\n            },\r\n        });\r\n    }\r\n\r\n    handleGraphTypeChange = (option) => this.setState({ selectedGraphType: option });\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <Row>\r\n                    <Col xs={12}>\r\n                        <Card>\r\n                            <Card.Body>\r\n                                <Card.Title> Sleep Quality vs Duration\r\n                                    <Info text=\"Click a data point on the graph to display that session in detail below.\" />\r\n                                    <GraphTypeButton\r\n                                        options={[GraphType.SCATTER, GraphType.AREA, GraphType.BAR]}\r\n                                        onChange={this.handleGraphTypeChange}\r\n                                        default={this.state.selectedGraphType}\r\n                                    />\r\n                                </Card.Title>\r\n                                {this.renderLeadingGraph()}\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </Col>\r\n                </Row>\r\n\r\n                <Row>\r\n                    <Col md={6} sm={12}>\r\n                        <Card>\r\n                            <Card.Body>\r\n                                <Card.Title>{this.formatDateTitle()}</Card.Title>\r\n                                <SleepQualityPieChart data={this.state.selectedSessionData} />\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </Col>\r\n                    <Col md={6} sm={12}>\r\n                        <Card>\r\n                            <Card.Body>\r\n                                <Card.Title>Miscellaneous Information</Card.Title>\r\n                                <MiscInfo data={this.state.selectedSession.miscInfo} />\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </Col>\r\n                </Row>\r\n            </>\r\n        )\r\n    }\r\n\r\n    private formatDateTitle(): string {\r\n        const { date, startTime, endTime } = this.state.selectedSession;\r\n        return moment(date).format(\"dddd Do MMMM YYYY\") + \" (\" + startTime + \" - \" + endTime + \")\";\r\n    }\r\n\r\n    private getMostRecentSleepSessionData(): SleepGraphMainData {\r\n        return this.props.data.find(d => d.date == this.getMostRecentSleepSession().date);\r\n    }\r\n\r\n    private getMostRecentSleepSession(): SelectedSessionInfo {\r\n        const sessionData = this.props.data.reduce((a, b) => (new Date(a.date) > new Date(b.date) ? a : b));\r\n        const { date, startTime, endTime, soundsRecorded, mood, duration } = sessionData;\r\n        return { date, startTime, endTime, miscInfo: { soundsRecorded, mood, duration } };\r\n    }\r\n\r\n    private renderLeadingGraph() {\r\n        const { data } = this.props;\r\n\r\n        switch (this.state.selectedGraphType) {\r\n            case GraphType.SCATTER: {\r\n                return <SleepScatterGraph data={data} onSelectedSession={this.onClickSleepSession} />\r\n            }\r\n            case GraphType.AREA: {\r\n                return <SleepAreaGraph data={data} onSelectedSession={this.onClickSleepSession} />\r\n            }\r\n            case GraphType.BAR: {\r\n                return <SleepBarGraph data={data} onSelectedSession={this.onClickSleepSession} />\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport default SleepGraph;","import React, { Component } from 'react';\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\nimport { faBed, faClock, faSmile } from '@fortawesome/free-solid-svg-icons';\r\nimport { SleepGraphMainData } from '../components/sleep/graphs/SleepGraph';\r\nimport LoadingSpinner from '../layout/LoadingSpinner';\r\nimport SleepInfoCard from '../components/sleep/SleepInfoCard';\r\nimport { SleepService } from '../service/SleepService';\r\nimport SleepGraph from '../components/sleep/graphs/SleepGraph';\r\n\r\ninterface SleepState {\r\n    sleepData: SleepGraphMainData[]\r\n    loading: boolean;\r\n}\r\n\r\nclass Sleep extends Component<{}, SleepState> {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            sleepData: undefined,\r\n            loading: false\r\n        }\r\n    }\r\n\r\n    async componentWillMount() {\r\n        this.setState({ loading: true });\r\n        const data = await new SleepService().initialise();\r\n        this.setState({ sleepData: data, loading: false });\r\n    }\r\n\r\n    render() {\r\n        const { sleepData } = this.state;\r\n\r\n        return (\r\n            <Container fluid>\r\n                <LoadingSpinner active={this.state.loading}/>\r\n                <p>Visualising the data recorded by the iOS Pillow app from my watch.</p>\r\n\r\n                <Row>\r\n                    <Col md={4} sm={12}>\r\n                        <SleepInfoCard\r\n                            title=\"Sessions\"\r\n                            value={this.getSleepSessionQuantity()}\r\n                            icon={faBed}\r\n                        />\r\n                    </Col>\r\n                    <Col md={4} sm={12}>\r\n                        <SleepInfoCard\r\n                            title=\"Avg Quality\"\r\n                            value={this.getAverageSleepQuality()}\r\n                            unit=\"%\"\r\n                            icon={faSmile}\r\n                        />\r\n                    </Col>\r\n                    <Col md={4} sm={12}>\r\n                        <SleepInfoCard\r\n                            title=\"Hours Slept\"\r\n                            value={this.getTotalHoursSlept()}\r\n                            icon={faClock}\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n\r\n                { sleepData && <SleepGraph data={sleepData} /> }\r\n            </Container>\r\n        )\r\n    }\r\n\r\n    private getAverageSleepQuality(): number {\r\n        const { sleepData } = this.state;\r\n        if (!sleepData) return 0;\r\n        let sum = this.state.sleepData.map(e => e.sleepQuality).reduce((sum, val) => sum + val, 0);\r\n        return Number((sum / this.getSleepSessionQuantity()).toFixed(1));\r\n    }\r\n\r\n    private getSleepSessionQuantity(): number {\r\n        const { sleepData } = this.state;\r\n        return sleepData ? sleepData.length : 0;\r\n    }\r\n\r\n    private getTotalHoursSlept(): number {\r\n        const { sleepData } = this.state;\r\n        if (!sleepData) return 0;\r\n        const hours = sleepData.map(e => e.duration).reduce((sum, val) => sum + val, 0);\r\n        return Math.round(hours);\r\n    }\r\n}\r\n\r\nexport default Sleep;","import React, { Component } from \"react\";\r\nimport { ComposedChart, ResponsiveContainer, XAxis, YAxis, Tooltip, Legend, CartesianGrid, Area, Bar, Line } from 'recharts';\r\nimport { Container } from 'react-bootstrap';\r\n\r\nexport interface OverviewGraphProps {\r\n    data: OverviewGraphData[]\r\n}\r\n\r\nexport interface OverviewGraphData {\r\n    'Type': string,\r\n    'Start': string,\r\n    'End': string,\r\n    'Duration': string,\r\n    'Distance': string,\r\n    'Average Heart Rate': number,\r\n    'Max Heart Rate': number,\r\n    'Average Pace': string,\r\n    'Average Speed': number,\r\n    'Active Energy': number,\r\n    'Total Energy': number,\r\n    'Elevation Ascended': number,\r\n    'Elevation Descended': number,\r\n    'Weather Temperature': string,\r\n    'Weather Humidity': string\r\n}\r\n\r\nclass OverviewGraph extends Component<OverviewGraphProps> {\r\n    render() {\r\n        return (\r\n            <Container>\r\n                <ResponsiveContainer width=\"100%\" height={350}>\r\n                    <ComposedChart height={325} data={this.extractOverviewData()}>\r\n                        <XAxis dataKey=\"Date\" angle={-45} textAnchor=\"end\"/>\r\n                        <YAxis domain={[0, 1200]}/>\r\n                        <Tooltip />\r\n                        <Legend />\r\n                        <CartesianGrid stroke=\"#f5f5f5\" />\r\n                        <Area type=\"monotone\" dataKey=\"Duration\" fill=\"#8884d8\" stroke=\"#8884d8\" />\r\n                        <Bar dataKey=\"Calories Burnt\" barSize={4} barGap={1} />\r\n                        <Line type=\"monotone\" dataKey=\"Average Heart Rate\" stroke=\"#ff7300\" />\r\n                    </ComposedChart>\r\n                </ResponsiveContainer>\r\n            </Container>\r\n        )\r\n    }\r\n\r\n    extractOverviewData() {\r\n        const data = this.props.data.filter(e => e[\"Duration\"] && e[\"Average Heart Rate\"] && e[\"Total Energy\"] && e[\"Start\"]); //Filter falsy/invalid values out.\r\n        const filtered = data.map(datum => {\r\n            const extracted = Object.keys(datum)\r\n            .filter(key => [\"Duration\", \"Average Heart Rate\", \"Total Energy\", \"Start\"].includes(key))\r\n            .reduce((obj, key) => {\r\n                obj[key] = datum[key];\r\n                return obj;\r\n            }, {});\r\n            return {\r\n                'Duration': extracted['Duration'].split(\":\")[1],\r\n                'Average Heart Rate': Number(extracted['Average Heart Rate']).toFixed(2),\r\n                'Calories Burnt': Number(extracted['Total Energy']).toFixed(2),\r\n                'Date': extracted['Start'].split(\" \")[0]\r\n            }\r\n        });\r\n        return filtered.slice(0, 50);\r\n    }\r\n}\r\n\r\nexport default OverviewGraph;","import { Card } from 'react-bootstrap';\r\nimport React, { Component } from 'react';\r\nimport OverviewGraph, {OverviewGraphData} from \"../components/overview/OverviewGraph\";\r\nimport CsvFileReader from \"../infrastructure/CsvFileReader\";\r\n\r\ninterface OverviewState {\r\n    workouts: OverviewGraphData[]\r\n}\r\n\r\nclass Overview extends Component<{}, OverviewState> {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            workouts: undefined\r\n        }\r\n    }\r\n\r\n    async componentWillMount() {\r\n        //const csv = new CsvFileReader().read('workouts.csv', ',');\r\n        this.setState({ workouts: undefined });\r\n    }\r\n\r\n    render() {\r\n        const { workouts } = this.state;\r\n        return (\r\n            <div>\r\n                <p>This is the overview page.</p>\r\n\r\n                <Card>\r\n                    <Card.Body>\r\n                        { workouts && <OverviewGraph data={workouts} /> }\r\n                    </Card.Body>\r\n\r\n                </Card>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Overview;","import React, { Component } from \"react\";\r\nimport { Container } from \"react-bootstrap\";\r\n\r\nclass Gym extends Component {\r\n    render() {\r\n        return (\r\n            <Container fluid>\r\n                <p>This is the gym page.</p>\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Gym;","import React, { Component } from \"react\";\r\nimport { Container } from \"react-bootstrap\";\r\n\r\nclass Running extends Component {\r\n    render() {\r\n        return (\r\n            <Container fluid>\r\n                <p>This is the running page.</p>\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Running;","import Header from './Header';\r\nimport Footer from './Footer';\r\nimport Menu from './Menu';\r\nimport { Row, Col, Container } from 'react-bootstrap';\r\nimport { SnapshotDates } from '../domain/SnapshotDates';\r\nimport React, { Component } from 'react';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport { AppInformation } from '../domain/AppInformation';\r\nimport Sleep from '../pages/Sleep';\r\nimport Overview from \"../pages/Overview\";\r\nimport Gym from \"../pages/Gym\";\r\nimport Running from \"../pages/Running\";\r\nimport styles from '../assets/sass/components/layout/Main.module.scss'\r\n\r\ninterface MainLayoutProps {\r\n    snapshotDates: SnapshotDates;\r\n    appInfo: AppInformation;\r\n}\r\n\r\nclass MainLayout extends Component<MainLayoutProps> {\r\n    render() {\r\n        const { snapshotDates, appInfo } = this.props;\r\n\r\n        return (\r\n            <Container fluid className={styles.wrapper}>\r\n                <Row className={styles.row}>\r\n                    <Header snapshotDates={snapshotDates} appInfo={appInfo} />\r\n                </Row>\r\n\r\n                <Row className={styles.row}>\r\n                    <div className={styles.sidebar}>\r\n                        <Menu />\r\n                    </div>\r\n                    <Col className={styles.content}>\r\n                        <Switch>\r\n                            <Route path='/' exact component={Overview}/>\r\n                            <Route path='/running' exact component={Running}/>\r\n                            <Route path='/gym' component={Gym}/>\r\n                            <Route path='/sleep' component={Sleep}/>\r\n                        </Switch>\r\n                    </Col>\r\n                </Row>\r\n\r\n                <Footer />\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n\r\nexport default MainLayout;","import RestClient from \"../RestClient\";\r\nimport { Info } from '../../types/Info';\r\n\r\nexport class InfoRepository {\r\n    async read(): Promise<Info> {\r\n        const response = await RestClient.get<Info>('/actuator/info');\r\n\r\n        if (response.data) {\r\n            return response.data;\r\n        }\r\n\r\n        if (response.errors) {\r\n            throw new Error(response.errors[0].message);\r\n        }\r\n    }\r\n}","import { Info } from '../types/Info';\r\nimport { GitInformation } from '../domain/GitInformation';\r\nimport { AppInformation } from '../domain/AppInformation';\r\nimport { BuildInfo } from '../domain/BuildInfo';\r\n\r\nexport class InfoConverter {\r\n    convert(data: Info): AppInformation {\r\n        const git = data.git;\r\n        const commit = git.commit;\r\n        const gitInfo = new GitInformation(git.branch, commit.id.abbrev, commit.time);\r\n\r\n        const build = git.build;\r\n        const buildInfo = new BuildInfo(build.version);\r\n\r\n        return new AppInformation(gitInfo, buildInfo);\r\n    }\r\n}","import { InfoRepository } from '../infrastructure/repository/InfoRepository';\r\nimport { InfoConverter } from '../converters/InfoConverter';\r\nimport { AppInformation } from '../domain/AppInformation';\r\n\r\nexport class InfoService {\r\n    private readonly repository = new InfoRepository();\r\n    private readonly converter = new InfoConverter();\r\n\r\n    async getInfo(): Promise<AppInformation> {\r\n        const data = await this.repository.read();\r\n        return this.converter.convert(data);\r\n    }\r\n}","import 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './assets/sass/global/styles.scss';\r\nimport './assets/sass/global/activity-rings.scss';\r\nimport './assets/sass/global/recharts.scss';\r\nimport './assets/sass/global/react-bootstrap.scss';\r\nimport 'nprogress/nprogress.css';\r\nimport '@fortawesome/fontawesome-svg-core/styles.css'\r\nimport NProgress from 'nprogress';\r\nimport { config } from \"@fortawesome/fontawesome-svg-core\";\r\nimport MainLayout from '../src/layout/Main';\r\nimport React from 'react';\r\nimport LoadingSpinner from '../src/layout/LoadingSpinner';\r\nimport SnapshotContextProvider from '../src/infrastructure/context/SnapshotContextProvider';\r\nimport { InfoService } from './service/InfoService';\r\nimport { AppInformation } from './domain/AppInformation';\r\nimport { Component } from 'react';\r\nimport { HashRouter } from 'react-router-dom'\r\n\r\nconfig.autoAddCss = false;\r\n\r\n/* Router.events.on('routeChangeStart', () => NProgress.start());\r\nRouter.events.on('routeChangeComplete', () => NProgress.done());\r\nRouter.events.on('routeChangeError', () => NProgress.done()); */\r\nNProgress.configure({ showSpinner: false, easing: 'ease' });\r\n\r\ninterface AppProps {\r\n    'Component': React.FC;\r\n    pageProps: any;\r\n}\r\n\r\ninterface AppState {\r\n    appInfo: AppInformation;\r\n    loading: boolean;\r\n}\r\n\r\nexport default class App extends Component<{}, AppState> {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            appInfo: AppInformation.empty(),\r\n            loading: false\r\n        }\r\n    }\r\n    /*  const [loading, setLoading] = React.useState(false);\r\n \r\n     React.useEffect(() => {\r\n         const start = () => { setLoading(true); };\r\n         const stop = () => { setLoading(false); };\r\n \r\n         Router.events.on(\"routeChangeStart\", start);\r\n         Router.events.on(\"routeChangeComplete\", stop);\r\n         Router.events.on(\"routeChangeError\", stop);\r\n \r\n         return () => {\r\n             Router.events.off(\"routeChangeStart\", start);\r\n             Router.events.off(\"routeChangeComplete\", stop);\r\n             Router.events.off(\"routeChangeError\", stop);\r\n         };\r\n     }, []); */\r\n\r\n    async componentDidMount() {\r\n        //const snapshotDates: SnapshotDates = await new ActivityTrendsService().getSnapshotDates();\r\n        const appInfo: AppInformation = await new InfoService().getInfo();\r\n        this.setState({ appInfo });\r\n    }\r\n\r\n    render() {\r\n        const { appInfo, loading } = this.state;\r\n        return (\r\n            <>\r\n                <SnapshotContextProvider storeSnapshotDates={undefined}>\r\n                    <HashRouter basename={process.env.REACT_APP_BASE_PATH}>\r\n                        <MainLayout snapshotDates={undefined} appInfo={appInfo}>\r\n                            <LoadingSpinner active={loading} />\r\n                        </MainLayout>\r\n                    </HashRouter>\r\n                </SnapshotContextProvider>\r\n            </>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"ScatterTooltip_label__2s--Q\",\"value\":\"ScatterTooltip_value__2XvGd\",\"wrapper\":\"ScatterTooltip_wrapper__3La6n\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"icon\":\"SleepInfoCard_icon__3FwfO\",\"circle\":\"SleepInfoCard_circle__3f2rT\",\"value\":\"SleepInfoCard_value__3uqo5\",\"title\":\"SleepInfoCard_title__3C_Y3\",\"row\":\"SleepInfoCard_row__CGIS5\",\"card\":\"SleepInfoCard_card__OHFlL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"active\":\"SoundsRecorded_active__iBGzU\",\"inactive\":\"SoundsRecorded_inactive__3WaU1\",\"column\":\"SoundsRecorded_column__1LjaU\",\"middleColumn\":\"SoundsRecorded_middleColumn__2Bosm\",\"bar\":\"SoundsRecorded_bar__2oDsZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"AreaTooltip_label__aHdi6\",\"value\":\"AreaTooltip_value__2gngI\",\"wrapper\":\"AreaTooltip_wrapper__3JmhX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"BarTooltip_label__DSsSo\",\"value\":\"BarTooltip_value__1_Qce\",\"wrapper\":\"BarTooltip_wrapper__QTHvB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sidebar\":\"Main_sidebar__1FZLD\",\"content\":\"Main_content__3cICw\",\"wrapper\":\"Main_wrapper__1Tqcp\",\"row\":\"Main_row__3kXub\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__YpYqu\",\"github\":\"Header_github__2E2hq\",\"link\":\"Header_link__BkwPw\"};"],"sourceRoot":""}