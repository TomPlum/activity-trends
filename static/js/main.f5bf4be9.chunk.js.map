{"version":3,"sources":["assets/sass/components/layout/Header.module.scss","assets/sass/components/sleep/tooltips/AreaTooltip.module.scss","assets/sass/components/sleep/tooltips/BarTooltip.module.scss","assets/sass/components/layout/Main.module.scss","assets/sass/components/layout/SnapshotSelector.module.scss","assets/sass/components/layout/Item.module.scss","assets/sass/components/sleep/tooltips/PieTooltip.module.scss","assets/sass/components/sleep/GraphTypeButton.module.scss","assets/sass/pages/NotFound.module.scss","assets/sass/components/sleep/Info.module.scss","assets/sass/components/sleep/SleepDuration.module.scss","assets/sass/components/sleep/WakeMood.module.scss","assets/sass/pages/Sleep.module.scss","assets/sass/components/layout/Footer.module.scss","assets/sass/components/layout/Menu.module.scss","assets/sass/components/layout/LoadingSpinner.module.scss","infrastructure/CsvFileReader.ts","assets/sass/components/sleep/graphs/SleepQualityPieChart.module.scss","assets/sass/components/layout/HealthInfo.module.scss","domain/Page.ts","domain/SnapshotDates.ts","infrastructure/RestClient.tsx","infrastructure/repository/ActivityTrendsRepository.ts","infrastructure/converters/SnapshotDatesConverter.ts","application/service/ActivityTrendsService.ts","presentation/layout/SnapshotSelector.tsx","domain/GitInformation.ts","domain/BuildInfo.ts","domain/AppInformation.ts","infrastructure/repository/InfoRepository.ts","infrastructure/converters/InfoConverter.ts","application/service/InfoService.ts","presentation/layout/HealthInfo.tsx","presentation/layout/Header.tsx","presentation/layout/Footer.tsx","presentation/layout/Item.tsx","presentation/layout/Menu.tsx","presentation/layout/ActivityRings.tsx","presentation/layout/LoadingSpinner.tsx","presentation/components/sleep/SleepInfoCard.tsx","infrastructure/converters/SleepDataConverter.ts","infrastructure/repository/SleepDataRepository.ts","application/service/SleepService.ts","presentation/components/sleep/tooltips/PieTooltip.tsx","infrastructure/types/GraphType.ts","presentation/components/GraphContainer.tsx","presentation/components/sleep/graphs/SleepQualityPieChart.tsx","presentation/components/sleep/GraphTypeButton.tsx","presentation/components/sleep/tooltips/ScatterTooltip.tsx","utility/Arrays.ts","presentation/components/sleep/graphs/SleepScatterGraph.tsx","presentation/components/sleep/tooltips/AreaTooltip.tsx","domain/Mood.ts","presentation/components/sleep/graphs/SleepAreaGraph.tsx","presentation/components/sleep/Info.tsx","presentation/components/sleep/SleepDuration.tsx","domain/SoundThreshold.ts","presentation/components/sleep/WakeMood.tsx","presentation/components/sleep/SoundsRecorded.tsx","presentation/components/sleep/MiscInfo.tsx","presentation/components/sleep/tooltips/BarTooltip.tsx","presentation/components/sleep/graphs/SleepBarGraph.tsx","utility/Numbers.ts","presentation/components/DummyAreaGraph.tsx","utility/Colours.ts","presentation/components/DummyPieGraph.tsx","presentation/components/sleep/graphs/SleepGraph.tsx","presentation/layout/DisabledOverlay.tsx","presentation/pages/Sleep.tsx","presentation/components/overview/OverviewGraph.tsx","presentation/pages/Overview.tsx","presentation/pages/Running.tsx","presentation/pages/Gym.tsx","presentation/pages/NotFound.tsx","presentation/components/ProgressRoute.tsx","presentation/layout/Main.tsx","presentation/pages/ErrorBoundary.tsx","ActivityTrendsApplication.tsx","index.tsx","assets/sass/components/layout/ActivityRings.module.scss","assets/sass/components/sleep/MiscInfo.module.scss","assets/sass/components/layout/DisabledOverlay.module.scss","assets/sass/components/sleep/SleepInfoCard.module.scss","assets/sass/components/sleep/tooltips/ScatterTooltip.module.scss","assets/sass/components/sleep/SoundsRecorded.module.scss"],"names":["module","exports","CsvFileReader","dataDirectory","path","join","process","cwd","fileName","delimiter","result","Papa","parse","this","getFileContents","header","skipEmptyLines","complete","results","data","errors","forEach","e","console","log","file","fs","readdirSync","find","ReferenceError","filePath","readFileSync","Page","SnapshotDates","dates","Map","page","set","has","get","RestClient","endpoint","makeRestRequest","undefined","body","method","host","URI","fetch","headers","JSON","stringify","then","response","a","ok","json","status","Error","statusText","catch","ActivityTrendsRepository","message","SnapshotDatesConverter","add","SLEEP","snapshotDates","sleep","ActivityTrendsService","repository","converter","initialise","convert","SnapshotSelector","props","select","snapshot","setState","selected","isDisabled","state","getSnapshotDates","error","mostRecent","NavDropdown","title","getTitle","id","className","styles","onSelect","disabled","Item","eventKey","Divider","getDates","map","date","context","latest","Component","GitInformation","branch","hash","BuildInfo","version","AppInformation","git","build","gitInformation","buildInfo","empty","InfoRepository","InfoConverter","gitInfo","getGitInformation","commit","time","moment","unix","format","abbrev","InfoService","read","HealthInfo","renderTooltip","getGitInfo","getBuildInfo","Popover","tooltip","Title","heading","fixedWidth","icon","faHammer","tooltipIcon","Content","label","href","getBranchURI","target","rel","value","getBranch","getCommitURI","getHash","getDate","getVersion","renderErrorTooltip","faBurn","toString","isActive","getInfo","OverlayTrigger","placement","delay","show","hide","overlay","trigger","faExclamationCircle","faInfoCircle","Header","Navbar","fixed","Brand","alt","src","width","height","logo","name","Toggle","Collapse","Nav","Link","link","faGithub","size","github","Footer","Container","fluid","footer","getCurrentYear","year","to","Menu","active","activeKey","nav","faHome","faRunning","faDumbbell","faMoon","ActivityRings","svg","viewBox","ring","move","background","cx","cy","r","strokeWidth","completed","strokeDasharray","exercise","stand","LoadingSpinner","wrapper","SleepInfoCard","unit","Card","card","Row","row","Col","lg","xs","faCircle","circle","start","end","Number","suffix","duration","SleepDataConverter","startDate","endDate","isNap","sleepQuality","awakeTime","remSleep","lightSleep","deepSleep","soundsRecorded","mood","graphData","slice","startTime","endTime","filterInvalidData","convertSnapshot","latestSnapshot","filter","sessions","quality","nap","awake","rem","light","deep","SleepDataRepository","reader","csv","SleepService","convertInitialiseResponseData","getSnapshot","convertSnapshotData","PieTooltip","GraphType","payload","toFixed","GraphContainer","children","ResponsiveContainer","SleepQualityPieChart","getSectorColourMappings","entry","i","Cell","fill","createGraphData","PieChart","Pie","nameKey","dataKey","innerRadius","outerRadius","animationBegin","paddingAngle","Label","position","getSleepQualityLabel","Tooltip","content","Legend","stroke","GraphTypeButton","option","selectedType","onChange","defaultType","options","UNKNOWN","nextProps","prevProps","Dropdown","dropdown","toggle","variant","ScatterTooltip","Arrays","min","arr","reduce","p","v","max","SleepScatterGraph","onClickScatter","onSelectedSession","getEarliestDate","brushStartIndex","brushEndIndex","getBrushEndIndex","ScatterChart","CartesianGrid","XAxis","type","tickFormatter","xAxisFormatter","YAxis","domain","yAxisDomain","ZAxis","range","cursor","Brush","endIndex","getBrushFilteredData","length","brush","startIndex","Scatter","onClick","isAnimationActive","datum","Date","Math","round","durations","floor","ceil","tickItem","AreaTooltip","Mood","SleepAreaGraph","onClickArea","AreaChart","Area","activeDot","animationDuration","Info","text","onMouseEnter","onMouseLeave","SleepDuration","container","faClock","SoundThreshold","WakeMood","getClass","targetMood","inactive","faGrinBeam","GREAT","faSmile","GOOD","faMeh","OK","faFrown","NOT_SO_GOOD","faTired","BAD","getThreshold","quantity","LOWER","MIDDLE","UPPER","FLOOR","SoundsRecorded","threshold","column","faVolumeMute","middleColumn","ProgressBar","now","getBarFillPercentage","bar","faVolumeUp","MiscInfo","BarTooltip","SleepBarGraph","onClickBar","BarChart","Bar","Numbers","randomInt","random","DummyAreaGraph","shift","getFakeData","timeout","setInterval","speed","clearInterval","colour","animationEasing","fillOpacity","sampleSize","dataBounds","Array","keys","Colours","colorStart","colorEnd","colorCount","convertToRGB","len","alpha","colours","c","push","convertToHex","s","parseInt","isNaN","charAt","rgb","hex","color","trim","substring","DummyPieGraph","sectors","gradient","fills","SleepGraph","onClickSleepSession","selectedSessionData","selectedSession","miscInfo","selectedGraphType","getMostRecentSleepSessionData","getMostRecentSleepSession","AREA","Body","SCATTER","BAR","renderLeadingGraph","md","sm","formatDateTitle","session","d","sessionData","b","getRandomIcon","icons","faPlug","faDizzy","faTimes","getRandomHeading","messages","DisabledOverlay","headingIcon","break","subtitle","description","referenceIcon","Sleep","sleepData","loading","desc","getSleepSessionQuantity","faBed","getAvgSleepQuality","getTotalHoursSlept","getSoundsSum","faMicrophone","sum","val","hours","sounds","it","OverviewGraph","ComposedChart","extractOverviewData","angle","textAnchor","barSize","Line","extracted","Object","key","includes","obj","split","Overview","workouts","Running","Gym","NotFound","number","NProgress","configure","showSpinner","easing","ProgressRoute","React","useState","nprogress","useEffect","done","MainLayout","sidebar","component","exact","ErrorBoundary","hasError","info","config","autoAddCss","ActivityTrendsApplication","basename","Main","location","pathName","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f5bf4be9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__2ZtSD\",\"name\":\"Header_name__1NJUs\",\"github\":\"Header_github__1sRkW\",\"link\":\"Header_link__NFLNH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"AreaTooltip_label__g5udc\",\"value\":\"AreaTooltip_value__3hQFC\",\"wrapper\":\"AreaTooltip_wrapper__HjMe3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"BarTooltip_label__3CJlt\",\"value\":\"BarTooltip_value__3Ugsc\",\"wrapper\":\"BarTooltip_wrapper__LbuyS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sidebar\":\"Main_sidebar__27C4l\",\"content\":\"Main_content__3AO2u\",\"wrapper\":\"Main_wrapper__3jR9U\",\"row\":\"Main_row__AJOEi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"snapshot\":\"SnapshotSelector_snapshot__3T43n\",\"dropdown-item\":\"SnapshotSelector_dropdown-item__34USS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"overview\":\"Item_overview__hHbwW\",\"running\":\"Item_running__3TEcd\",\"sleep\":\"Item_sleep__2W2ya\",\"gym\":\"Item_gym__2AXra\",\"name\":\"Item_name__3hHb0\",\"link\":\"Item_link__1ZKgg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"PieTooltip_label__3yicn\",\"value\":\"PieTooltip_value__310zL\",\"wrapper\":\"PieTooltip_wrapper__23jcp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dropdown\":\"GraphTypeButton_dropdown__3_hkd\",\"toggle\":\"GraphTypeButton_toggle__3r6i5\",\"option\":\"GraphTypeButton_option__11Vke\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"NotFound_container__zt-TK\",\"number\":\"NotFound_number__2l7zC\",\"text\":\"NotFound_text__3TLZ_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"text\":\"Info_text__3s_XI\",\"icon\":\"Info_icon__1w_HW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"SleepDuration_container__2VlxU\",\"icon\":\"SleepDuration_icon__f378Q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"active\":\"WakeMood_active__2bMpV\",\"inactive\":\"WakeMood_inactive__2r3Rp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"desc\":\"Sleep_desc__IwNfB\",\"link\":\"Sleep_link__1ylkj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"Footer_footer__h9NZX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Menu_nav__3Jeql\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"LoadingSpinner_wrapper__1A2zE\",\"loading\":\"LoadingSpinner_loading__3UIDy\",\"rings\":\"LoadingSpinner_rings__1Y7DY\"};","import fs from 'fs'\nimport path from 'path'\nimport Papa from 'papaparse';\n\nclass CsvFileReader {\n    private readonly dataDirectory = path.join(process.cwd(), 'public/data')\n\n    read(fileName: string, delimiter: string): unknown[] {\n        \n        const result = Papa.parse(this.getFileContents(fileName), {\n            delimiter: delimiter,\n            header: true,\n            skipEmptyLines: true,\n            complete: results => {\n                return results.data\n            }\n        });\n\n        if (result.errors) {\n            result.errors.forEach(e => {\n                console.log(e);\n            });\n        }\n\n        return result.data;\n    }\n\n    private getFileContents(fileName: string) {\n        const filenames = fs.readdirSync(this.dataDirectory)\n        const file = filenames.find(e => e === fileName);\n\n        if (!file) {\n            throw new ReferenceError('Unknown File: ' + fileName)\n        }\n        const filePath = path.join(this.dataDirectory, file)\n        return fs.readFileSync(filePath, 'utf8')\n    }\n}\n\nexport default CsvFileReader;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"SleepQualityPieChart_label__2W3PR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"icon\":\"HealthInfo_icon__2ZW40\",\"tooltipIcon\":\"HealthInfo_tooltipIcon__2yY4a\",\"tooltip\":\"HealthInfo_tooltip__2qyeN\",\"label\":\"HealthInfo_label__2ryBH\",\"value\":\"HealthInfo_value__1eTWX\",\"heading\":\"HealthInfo_heading__3hnp3\"};","export enum Page {\n    SLEEP\n}","import { Page } from './Page';\n\nexport class SnapshotDates {\n    private dates = new Map<Page, string[]>()\n\n    add(page: Page, dates: string[]) {\n        this.dates.set(page, dates);\n    }\n\n    getDates(page: Page): string[] {\n        if (this.dates.has(page)) {\n            return this.dates.get(page);\n        }\n        return [];\n    }\n}","import fetch from 'isomorphic-unfetch';\n\nclass RestClient {\n    private static readonly host = process.env.REACT_APP_BACKEND_URL\n\n    static async get<T>(endpoint: string): Promise<APIResponse<T>> {\n        return await RestClient.makeRestRequest<T>(\"GET\", undefined, endpoint);\n    }\n\n    static async post<T>(endpoint: string, body: {}):  Promise<APIResponse<T>> {\n        return await RestClient.makeRestRequest<T>(\"POST\", body, endpoint);\n    }\n    \n\n    private static async makeRestRequest<T>(method: string, body: object, endpoint: string): Promise<APIResponse<T>> {\n        if (!this.host) {\n            throw new ReferenceError('Host URI is not defined!');\n        }\n\n        if (!endpoint) {\n            throw new ReferenceError(\"Endpoint is not defined!\");\n        }\n\n        const URI = this.host + endpoint;\n        console.log(\"Sending \" + method + \" request to \" + URI);\n\n        return await fetch(URI, {\n            method: method,\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n            body: body ? JSON.stringify(body) : undefined\n        }).then(async response => {\n            if (response.ok) {\n                const json = await response.json() as Promise<T>\n                console.log(\"Sucessfully received \" + response.status + \" response\", json);\n                return {\n                    data: json,\n                    errors: []\n                };\n            } else {\n                return {\n                    data: undefined,\n                    errors: [new Error(response.statusText)]\n                };\n            }\n        }).catch(e => {\n            console.log(\"An error occurred while making a request to \" + endpoint, e);\n            return {\n                data: undefined,\n                errors: [new Error(e)]\n            }\n        });\n    }\n}\n\nexport interface APIResponse<T> {\n    data: Promise<T>;\n    errors: Error[];\n}\n\nexport default RestClient;","import RestClient from \"../RestClient\";\nimport { InitialiseResponse } from '../types/Common';\n\nexport class ActivityTrendsRepository {\n    async initialise(): Promise<InitialiseResponse> {\n        const response = await RestClient.get<InitialiseResponse>('/initialise')\n        if (response.data) {\n            return response.data;\n        }\n\n        if (response.errors) {\n            throw new Error(response.errors[0].message);\n        }\n\n        throw new Error(\"Initialise Response is Null\")\n    }\n}","import { InitialiseResponse } from '../types/Common';\nimport { SnapshotDates } from '../../domain/SnapshotDates';\nimport { Page } from '../../domain/Page';\n\nexport class SnapshotDatesConverter {\n    convert(response: InitialiseResponse): SnapshotDates {\n        const dates = new SnapshotDates();\n        dates.add(Page.SLEEP, response.snapshotDates.sleep);\n        return dates;\n    }\n}","import { ActivityTrendsRepository } from \"../../infrastructure/repository/ActivityTrendsRepository\";\nimport { SnapshotDatesConverter } from '../../infrastructure/converters/SnapshotDatesConverter';\nimport { SnapshotDates } from \"../../domain/SnapshotDates\";\n\nexport class ActivityTrendsService {\n    private readonly repository = new ActivityTrendsRepository();\n    private readonly converter = new SnapshotDatesConverter();\n\n    async getSnapshotDates(): Promise<SnapshotDates> {\n        const data = await this.repository.initialise().catch(e => {throw e});\n        return this.converter.convert(data);\n    }\n}","import { NavDropdown } from 'react-bootstrap';\nimport React, { Component } from 'react';\nimport { Page } from '../../domain/Page';\nimport { SnapshotDates } from '../../domain/SnapshotDates';\nimport styles from '../../assets/sass/components/layout/SnapshotSelector.module.scss'\nimport { ActivityTrendsService } from \"../../application/service/ActivityTrendsService\";\n\ninterface SnapshotSelectorState {\n    data: SnapshotDates;\n    selected: string;\n    isDisabled: boolean;\n}\n\nclass SnapshotSelector extends Component<{}, SnapshotSelectorState> {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            data: new SnapshotDates(),\n            selected: \"Snapshot\",\n            isDisabled: false,\n        }\n    }\n\n    select = (snapshot) => {\n        this.setState({ selected: snapshot, isDisabled: true });\n        this.setState({ isDisabled: false });\n    }\n\n    async componentDidMount() {\n        await new ActivityTrendsService().getSnapshotDates()\n               .then((data) => this.setState({ data }))\n               .catch(error => this.setState({ isDisabled: true }));\n    }\n\n    render() {\n        const { isDisabled, selected } = this.state;\n        const mostRecent = \"Stubbed\"\n\n        return (\n            <NavDropdown title={this.getTitle()} id=\"snapshot-dropdown\" className={styles.snapshot} onSelect={this.select} disabled={isDisabled}>\n                <NavDropdown.Item className={styles.selected} key={mostRecent} eventKey={mostRecent}> Most Recent </NavDropdown.Item>\n                <NavDropdown.Divider/>\n                {\n                    this.state.data.getDates(Page.SLEEP).map(date => {\n                        return (\n                            <NavDropdown.Item className={styles.date} key={date} eventKey={date} disabled={selected === date}>\n                                {date}\n                            </NavDropdown.Item>\n                        )\n                    })\n                }\n            </NavDropdown>\n        );\n    }\n\n    private getTitle() {\n        const { selected } = this.state;\n        return this.context.latest === selected ? \"Snapshot\" : selected;\n    }\n}\n\nexport default SnapshotSelector;","export class GitInformation {\n    private readonly branch: string;\n    private readonly hash: string;\n    private readonly date: string;\n\n    constructor(branch: string, hash: string, date: string) {\n        this.branch = branch;\n        this.hash = hash;\n        this.date = date;\n    }\n\n    static empty() {\n        return new GitInformation(\"N/A\", \"N/A\", \"N/A\");\n    }\n\n    getBranch(): string {\n        return this.branch;\n    }\n\n    getBranchURI(): string {\n        //return process.env.NEXT_PUBLIC_API_GIT_BRANCH_URI + this.branch;\n        return \"https://github.com/TomPlum/activity-trends-api/tree/\" + this.branch;\n    }\n\n    getHash(): string {\n        return this.hash;\n    }\n\n    getCommitURI(): string {\n        //return process.env.NEXT_PUBLIC_API_GIT_COMMIT_URI + this.hash;\n        return \"https://github.com/TomPlum/activity-trends-api/commit/\" + this.hash;\n    }\n\n    getDate(): string {\n        return this.date;\n    }\n}","export class BuildInfo {\n    private readonly version: string;\n\n    constructor(version: string) {\n        this.version = version;\n    }\n\n    static empty() {\n        return new BuildInfo(\"N/A\");\n    }\n\n    getVersion(): string {\n        return this.version;\n    }\n}","import { GitInformation } from './GitInformation';\nimport { BuildInfo } from './BuildInfo';\n\nexport class AppInformation {\n    private readonly gitInformation: GitInformation;\n    private readonly buildInfo: BuildInfo;\n\n    constructor(git: GitInformation, build: BuildInfo) {\n        this.gitInformation = git;\n        this.buildInfo = build;\n    }\n\n    static empty(): AppInformation {\n        return new AppInformation(GitInformation.empty(), BuildInfo.empty());\n    }\n\n    getGitInfo(): GitInformation {\n        return this.gitInformation;\n    }\n\n    getBuildInfo(): BuildInfo {\n        return this.buildInfo;\n    }\n}","import RestClient from \"../RestClient\";\nimport { Info } from '../types/Info';\n\nexport class InfoRepository {\n    async read(): Promise<Info> {\n        const response = await RestClient.get<Info>('/actuator/info');\n\n        if (response.data) {\n            return response.data;\n        }\n\n        if (response.errors) {\n            throw new Error(response.errors[0].message);\n        }\n    }\n}","import { GitInfo, Info } from '../types/Info';\nimport { GitInformation } from '../../domain/GitInformation';\nimport { AppInformation } from '../../domain/AppInformation';\nimport { BuildInfo } from '../../domain/BuildInfo';\nimport moment from \"moment\";\n\nexport class InfoConverter {\n    convert(data: Info): AppInformation {\n        const git = data.git;\n        const gitInfo = InfoConverter.getGitInformation(git);\n\n        const build = git.build;\n        const buildInfo = new BuildInfo(build.version);\n\n        return new AppInformation(gitInfo, buildInfo);\n    }\n\n    private static getGitInformation(git: GitInfo): GitInformation {\n        const commit = git.commit;\n        const time = moment.unix(commit.time).format(\"DD/MM/YYYY\")\n        return new GitInformation(git.branch, commit.id.abbrev, time);\n    }\n}","import { InfoRepository } from '../../infrastructure/repository/InfoRepository';\nimport { InfoConverter } from '../../infrastructure/converters/InfoConverter';\nimport { AppInformation } from '../../domain/AppInformation';\n\nexport class InfoService {\n    private readonly repository = new InfoRepository();\n    private readonly converter = new InfoConverter();\n\n    async getInfo(): Promise<AppInformation> {\n        const data = await this.repository.read();\n        return this.converter.convert(data);\n    }\n}","import React, { Component } from 'react';\nimport { OverlayTrigger, Popover } from 'react-bootstrap';\nimport { faBurn, faExclamationCircle, faHammer, faInfoCircle } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { AppInformation } from '../../domain/AppInformation';\nimport { InfoService } from \"../../application/service/InfoService\";\nimport styles from '../../assets/sass/components/layout/HealthInfo.module.scss';\n\ninterface HealthInfoState {\n    isActive: boolean;\n    data: AppInformation;\n    error: Error;\n}\n\nclass HealthInfo extends Component<{}, HealthInfoState> {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isActive: false,\n            data: AppInformation.empty(),\n            error: undefined\n        }\n    }\n\n    async componentDidMount() {\n        await new InfoService().getInfo()\n            .then(data => this.setState({ data }))\n            .catch(error => this.setState({ error }));\n    }\n\n    render() {\n        const { error } = this.state;\n\n        return (\n            <OverlayTrigger\n                placement=\"bottom\"\n                delay={{ show: 100, hide: 2000 }}\n                overlay={error ? this.renderErrorTooltip : this.renderTooltip}\n                trigger={[\"hover\", \"focus\"]}\n            >\n                <FontAwesomeIcon\n                    fixedWidth\n                    className={error ? styles.tooltipIcon : styles.icon}\n                    icon={error ? faExclamationCircle : faInfoCircle}\n                />\n            </OverlayTrigger>\n        );\n    }\n\n    renderTooltip = (props) => {\n        const { data } = this.state;\n        const git = data.getGitInfo();\n        const build = data.getBuildInfo();\n\n        return (\n            <Popover id=\"health\" className={styles.tooltip} {...props}>\n                <Popover.Title className={styles.heading}>\n                    <FontAwesomeIcon fixedWidth icon={faHammer} className={styles.tooltipIcon}/>{' '}Latest Build\n                </Popover.Title>\n\n                <Popover.Content>\n                    <p className={styles.label}>Branch:\n                        <a href={git.getBranchURI()} target=\"_blank\" rel=\"noopener noreferrer\">\n                            <span className={styles.value}>{git.getBranch()}</span>\n                        </a>\n                    </p>\n                    <p className={styles.label}>Hash:\n                        <a href={git.getCommitURI()} target=\"_blank\" rel=\"noopener noreferrer\">\n                            <span className={styles.value}>{git.getHash()}</span>\n                        </a>\n                    </p>\n                    <p className={styles.label}>Date:\n                        <span className={styles.value}>{git.getDate()}</span>\n                    </p>\n                    <p className={styles.label}>Ver:\n                        <span className={styles.value}>{build.getVersion()}</span>\n                    </p>\n                </Popover.Content>\n            </Popover>\n        );\n    }\n\n    renderErrorTooltip = (props) => {\n        return (\n            <Popover id=\"health\" className={styles.tooltip} {...props}>\n                <Popover.Title className={styles.heading}>\n                    <FontAwesomeIcon fixedWidth icon={faBurn} />{' '}Connectivity\n                </Popover.Title>\n\n                <Popover.Content>\n                    <p className={styles.label}>Reason:\n                        <span className={styles.value}>{this.state.error.toString()}</span>\n                    </p>\n                </Popover.Content>\n            </Popover>\n        );\n    }\n}\n\nexport default HealthInfo;","import { Navbar, Nav } from 'react-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faGithub } from '@fortawesome/free-brands-svg-icons'\nimport React, { Component } from 'react';\nimport SnapshotSelector from './SnapshotSelector';\nimport HealthInfo from \"./HealthInfo\";\nimport styles from '../../assets/sass/components/layout/Header.module.scss'\n\nclass Header extends Component {\n    render() {\n        return (\n            <Navbar fixed=\"top\" className={styles.header}>\n                <Navbar.Brand>\n                    <img\n                        alt=\"activity-rings-logo\"\n                        src={process.env.REACT_APP_BASE_PATH + \"logo.png\"}\n                        width=\"30px\"\n                        height=\"30px\"\n                        className={styles.logo}\n                    />{' '}\n                    <span className={styles.name}>Activity Trends</span>\n                </Navbar.Brand>\n                <Navbar.Toggle />\n\n                <Navbar.Collapse className=\"justify-content-end\">\n                    <HealthInfo />\n                    <SnapshotSelector />\n                    <Nav>\n                        <Nav.Link target=\"_blank\" href=\"https://www.github.com/TomPlum\" className={styles.link}>\n                            <FontAwesomeIcon icon={faGithub} size=\"lg\" fixedWidth className={styles.github} />\n                        </Nav.Link>\n                    </Nav>\n                </Navbar.Collapse>\n            </Navbar>\n        );\n    }\n}\n\nexport default Header;","import { Container, Navbar } from 'react-bootstrap'\nimport styles from '../../assets/sass/components/layout/Footer.module.scss'\nimport React, { Component } from 'react';\nimport moment from \"moment\";\n\n\nclass Footer extends Component {\n    render() {\n        return (\n            <Container fluid>\n                <Navbar fixed=\"bottom\" className={styles.footer}>\n                    <Navbar.Brand>\n                        <span>Thomas Plumpton &copy; {Footer.getCurrentYear()}</span>\n                    </Navbar.Brand>\n                </Navbar>\n            </Container>\n        );\n    }\n\n    private static getCurrentYear(): string {\n        return moment().year().toString();\n    }\n}\n\nexport default Footer;","import React, { Component } from \"react\";\nimport { Nav } from 'react-bootstrap';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/fontawesome-svg-core\";\nimport { Link } from \"react-router-dom\"\nimport styles from '../../assets/sass/components/layout/Item.module.scss';\n\ninterface ItemProps {\n    name: string;\n    icon: IconDefinition;\n    page: string;\n    className?: string;\n}\n\nclass Item extends Component<ItemProps> {\n    render() {\n        const { name, icon, page, className } = this.props;\n        return (\n            <Nav.Item>\n                <Link to={page} className={styles.link} eventKey={name}>\n                    <FontAwesomeIcon\n                        icon={icon}\n                        className={styles[className]}\n                        fixedWidth\n                    />\n                    <p className={styles.name}>{name}</p>\n                </Link>\n            </Nav.Item>\n        );\n    }\n}\n\nexport default Item;","import React, { Component } from \"react\";\nimport { Nav } from \"react-bootstrap\";\nimport { faRunning, faMoon, faHome, faDumbbell } from '@fortawesome/free-solid-svg-icons';\nimport Item from \"./Item\";\nimport styles from '../../assets/sass/components/layout/Menu.module.scss';\n\nclass Menu extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            active: undefined\n        }\n    }\n\n    render() {\n        return (\n            <Nav activeKey=\"/\" className={styles.nav + \" flex-column\"}>\n                <Item name=\"Overview\" icon={faHome} page=\"/\" className=\"overview\" />\n                <Item name=\"Running\" icon={faRunning} page=\"/running\" className=\"running\" />\n                <Item name=\"Gym\" icon={faDumbbell} page=\"/gym\" className=\"gym\" />\n                <Item name=\"Sleep\" icon={faMoon} page=\"/sleep\" className=\"sleep\" />\n            </Nav>\n        )\n    }\n}\n\nexport default Menu;","import React from 'react';\nimport styles from '../../assets/sass/components/layout/ActivityRings.module.scss'\n\nconst ActivityRings = () => {\n    return (\n        <svg className={styles.svg} viewBox='0 0 37 37'>\n            <g className={styles.ring + \" \" + styles.move}>\n                <circle className={styles.background}\n                    cx=\"50%\" cy=\"50%\"\n                    r=\"15.915\"\n                    strokeWidth=\"3\"\n                />\n                <circle className={styles.completed}\n                    cx=\"50%\" cy=\"50%\"\n                    r=\"15.915\"\n                    strokeWidth=\"3\"\n                    strokeDasharray=\"100, 100\"\n                />\n            </g>\n\n            <g className={styles.ring + \" \" + styles.exercise}>\n                <circle className={styles.background}\n                    cx=\"50%\" cy=\"50%\"\n                    r=\"15.915\"\n                    strokeWidth=\"4\"\n                />\n                <circle className={styles.completed}\n                    cx=\"50%\" cy=\"50%\"\n                    r=\"15.915\"\n                    strokeWidth=\"4\"\n                    strokeDasharray=\"100, 100\"\n                />\n            </g>\n\n            <g className={styles.ring + \" \" + styles.stand}>\n                <circle className={styles.background}\n                    cx=\"50%\" cy=\"50%\"\n                    r=\"15.915\"\n                    strokeWidth=\"6\"\n                />\n                <circle className={styles.completed}\n                    cx=\"50%\" cy=\"50%\"\n                    r=\"15.915\"\n                    strokeWidth=\"6\"\n                    strokeDasharray=\"100, 100\"\n                />\n            </g>\n        </svg>\n    );\n}\n\nexport default ActivityRings;","import ActivityRings from './ActivityRings';\nimport React from 'react';\nimport styles from '../../assets/sass/components/layout/LoadingSpinner.module.scss';\n\nconst LoadingSpinner = ({active}) => {\n    if (active) {\n        return (\n            <div className={styles.wrapper}>\n                <ActivityRings />\n            </div>\n        );\n    }\n    return null;\n}\n\nexport default LoadingSpinner;","import React, { Component } from 'react';\nimport { Card, Row, Col } from 'react-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { IconDefinition } from '@fortawesome/fontawesome-svg-core';\nimport { faCircle} from '@fortawesome/free-solid-svg-icons';\nimport Countup from 'react-countup';\nimport styles from '../../../assets/sass/components/sleep/SleepInfoCard.module.scss';\n\nexport interface SleepInfoCardProps {\n    value: number,\n    unit?: string;\n    title: string,\n    icon: IconDefinition\n}\n\nclass SleepInfoCard extends Component<SleepInfoCardProps> {\n    render() {\n        const { value, title, icon, unit } = this.props;\n        return (\n            <Card className={styles.card}>\n                <Row className={styles.row}>\n                    <Col lg={4} xs={4}>\n                        <span className=\"fa-layers fa-5x\">\n                            <FontAwesomeIcon icon={faCircle} className={styles.circle} />\n                            <FontAwesomeIcon icon={icon} className={styles.icon} />\n                        </span>\n                    </Col>\n                    <Col lg={8} xs={8}>\n                        {value\n                            ? <Countup start={0} end={Number(value)} suffix={unit} duration={2} className={styles.value} />\n                            : <span className={styles.value}>N/A</span>\n                        }\n                        <h6 className={styles.title}>{title}</h6>\n                    </Col>\n                </Row>\n            </Card>\n        );\n    }\n}\n\nexport default SleepInfoCard;","import { SleepGraphMainData } from \"../../presentation/components/sleep/graphs/SleepGraph\";\nimport { Mood } from \"../../domain/Mood\";\nimport moment from \"moment\";\n\nexport interface SleepData {\n    startDate: string,\n    endDate: string,\n    duration: number,\n    isNap: boolean,\n    sleepQuality: number,\n    awakeTime: number,\n    remSleep: number,\n    lightSleep: number,\n    deepSleep: number,\n    soundsRecorded: number,\n    mood: string\n}\n\nclass SleepDataConverter {\n    convert(data: any[]): SleepData[] {\n        return data.map(row => {\n            return {\n                startDate: row[\"Start Time\"],\n                endDate: row[\"End Time\"],\n                duration: Number(row[\"Duration (mins)\"]),\n                isNap: row[\"Nap\"] === \"YES\",\n                sleepQuality: Number(row[\"Sleep Quality (%)\"]),\n                awakeTime: Number(row[\"Time Awake (mins)\"]),\n                remSleep: Number(row[\"Time in REM Slep (mins)\"]),\n                lightSleep: Number(row[\"Time in Light Sleep (mins)\"]),\n                deepSleep: Number(row[\"Time In Deep Sleep (mins)\"]),\n                soundsRecorded: Number(row[\"Sounds Recorded\"]),\n                mood: row[\"Wake-up mood\"]\n            }\n        });\n    }\n\n    convertToMainGraphData(data: SleepData[]): SleepGraphMainData[] {\n        const graphData = data.map(e => {\n            const startDate = e.startDate.slice(0, -6);\n            const endDate = e.endDate.slice(0, -6);\n            return {\n                date: startDate,\n                startTime: moment(startDate).format(\"HH:mm\"),\n                endTime: moment(endDate).format(\"HH:mm\"),\n                duration: e.duration / 60,\n                sleepQuality: e.sleepQuality,\n                isNap: e.isNap,\n                awakeTime: e.awakeTime / 60,\n                remSleep: e.remSleep / 60,\n                lightSleep: e.lightSleep / 60,\n                deepSleep: e.deepSleep / 60,\n                soundsRecorded: e.soundsRecorded,\n                mood: e.mood as Mood\n            }\n        });\n\n        return this.filterInvalidData(graphData);\n    }\n\n    convertInitialiseResponseData(data: any): SleepGraphMainData[] {\n        return this.convertSnapshot(data.latestSnapshot).filter(e => e.duration > 3 && e.duration < 12 && !e.isNap && e.sleepQuality > 0);\n    }\n\n    convertSnapshotData(data: any): SleepGraphMainData[] {\n        const graphData = this.convertSnapshot(data);\n        return this.filterInvalidData(graphData);\n    }\n\n    private filterInvalidData(data: SleepGraphMainData[]): SleepGraphMainData[] {\n        return data.filter(e => e.duration > 3 && e.duration < 12 && !e.isNap && e.sleepQuality > 0);\n    }\n\n    private convertSnapshot(data: any) {\n        return data.sessions.map( e => {\n            const startDate = e.startDate.slice(0, -6);\n            const endDate = e.endDate.slice(0, -6);\n            const time = e.time;\n            return {\n                date: startDate,\n                startTime: moment(startDate).format(\"HH:mm\"),\n                endTime: moment(endDate).format(\"HH:mm\"),\n                duration: e.duration / 60,\n                sleepQuality: e.quality,\n                isNap: e.nap,\n                awakeTime: time.awake / 60,\n                remSleep: time.rem / 60,\n                lightSleep: time.light / 60,\n                deepSleep: time.deep / 60,\n                soundsRecorded: e.soundsRecorded,\n                mood: e.mood as Mood\n            }\n        });\n    }\n}\n\nexport default SleepDataConverter;","import CsvFileReader from \"../CsvFileReader\";\nimport SleepDataConverter from \"../converters/SleepDataConverter\";\nimport RestClient from \"../RestClient\";\nimport { SleepInitialiseData } from '../types/Sleep';\n\nexport class SleepDataRepository {\n    private readonly reader = new CsvFileReader();\n    private readonly converter = new SleepDataConverter();\n\n    read() {\n        const csv = this.reader.read('sleep.csv', ', ');\n        return this.converter.convert(csv);\n    }\n\n    async initialise(): Promise<SleepInitialiseData> {\n        const response = await RestClient.get<SleepInitialiseData>('/sleep/initialise')\n    \n        if (response.data) {\n            return response.data;\n        }\n\n        if (response.errors) {\n            throw new Error(response.errors[0].message);\n        }\n    }\n\n    async getSnapshot(date: string) {\n        return await RestClient.get('/sleep/snapshot/' + date)\n    }\n}","import { SleepDataRepository } from '../../infrastructure/repository/SleepDataRepository';\nimport SleepDataConverter from '../../infrastructure/converters/SleepDataConverter';\n\nexport class SleepService {\n    private readonly repository = new SleepDataRepository();\n    private readonly converter = new SleepDataConverter()\n\n    async initialise() {\n        return await this.repository.initialise()\n            .then(data => this.converter.convertInitialiseResponseData(data))\n            .catch(e => null);\n    }\n\n    async getSnapshot(date: string) {\n        const data = await this.repository.getSnapshot(date);\n        return this.converter.convertSnapshotData(data);\n    }\n}","import { render } from '@testing-library/react';\nimport React, { Component } from 'react';\nimport styles from '../../../../assets/sass/components/sleep/tooltips/PieTooltip.module.scss';\n\ninterface PieTooltipState {\n    active: boolean;\n    payload: any;\n}\n\nclass PieTooltip extends Component<{}, PieTooltipState> {\n    constructor(props) {\n        super(props);\n        this.state = {\n            active: false,\n            payload: null\n        }\n    }\n\n    render() {\n        const { active, payload } = this.state;\n\n        if (active) {\n            return (\n                <div className={styles.wrapper}>\n                    <p className={styles.value}>\n                        <span className={styles.label}>{payload[0].name}: </span>\n                        {formatValue(payload[0].value)}\n                    </p>\n                </div>\n            );\n        }\n    \n        return null;\n    }\n};\n\nfunction formatValue(value: number): string {\n    return value.toFixed(1) + \" hours\";\n}\n\nexport default PieTooltip;","export enum GraphType {\n    AREA = \"Area\",\n    SCATTER = \"Scatter\",\n    BAR = \"Bar\",\n    UNKNOWN = \"N/A\"\n}","import React from 'react';\nimport { ResponsiveContainer } from 'recharts';\n\nexport interface GraphContainerProps {\n    title: string;\n}\n\nconst GraphContainer = ({ children }) => {\n    return (\n        <ResponsiveContainer width=\"100%\" height={350}>\n            {children}\n        </ResponsiveContainer>\n    );\n};\n\nexport default GraphContainer;","import React, { Component, ReactText } from \"react\";\nimport { PieChart, Pie, Tooltip, Cell, Label, Legend } from 'recharts';\nimport PieTooltip from \"../tooltips/PieTooltip\";\nimport GraphContainer from '../../GraphContainer';\nimport styles from '../../../../assets/sass/components/sleep/graphs/SleepQualityPieChart.module.scss';\n\ninterface SleepQualityPieChartProps {\n    data: SleepQualityPieChartData\n}\n\nexport interface SleepQualityPieChartData {\n    awakeTime: number,\n    remSleep: number,\n    lightSleep: number,\n    deepSleep: number,\n    sleepQuality: number\n}\n\nclass SleepQualityPieChart extends Component<SleepQualityPieChartProps> {\n    render() {\n        const data = this.createGraphData();\n        return (\n            <GraphContainer>\n                <PieChart>\n                    <Pie\n                        data={data}\n                        nameKey=\"name\" dataKey=\"value\"\n                        innerRadius=\"40%\" outerRadius=\"90%\"\n                        animationBegin={0}\n                        paddingAngle={5}\n                    >\n                        <Label className={styles.label} position=\"center\" value={this.getSleepQualityLabel()} />\n                        {this.getSectorColourMappings(data)}\n                    </Pie>\n                    <Tooltip content={props => <PieTooltip {...props} />} />\n                    <Legend />\n                </PieChart>\n            </GraphContainer>\n        );\n    }\n\n    private getSectorColourMappings = data => data.map((entry, i) => <Cell key={`cell-${i}`} fill={entry.fill} />)\n\n    private getSleepQualityLabel(): ReactText {\n        const data = this.props.data;\n        if (!data || !data.sleepQuality) return \"N/A\";\n        return data.sleepQuality + \"%\";\n    }\n\n    private createGraphData() {\n        const { data } = this.props;\n        if (!data) return [];\n        return [\n            { name: \"Awake Time\", value: data.awakeTime, fill: \"rgba(247, 163, 52, 0.6)\", stroke: \"rgba(247, 163, 52, 1)\" },\n            { name: \"REM Sleep\", value: data.remSleep, fill: \"rgba(240, 101, 210, 0.6)\",  stroke: \"rgba(240, 101, 210, 1)\" },\n            { name: \"Light Sleep\", value: data.lightSleep, fill: \"rgba(80, 217, 108, 0.6)\", stroke: \"rgba(80, 217, 108, 1)\" },\n            { name: \"Deep Sleep\", value: data.deepSleep, fill: \"rgba(52, 179, 247, 0.6)\", stroke: \"rgba(52, 179, 247, 1)\" }\n        ];\n    }\n}\n\nexport default SleepQualityPieChart;","import React, { Component } from \"react\";\nimport { Dropdown } from \"react-bootstrap\";\nimport { GraphType } from \"../../../infrastructure/types/GraphType\";\nimport styles from \"../../../assets/sass/components/sleep/GraphTypeButton.module.scss\";\n\ninterface GraphTypeButtonProps {\n    onChange: (option) => void;\n    options: GraphType[];\n    defaultType?: GraphType;\n    disabled: boolean;\n}\n\ninterface GraphTypeButtonState {\n    selectedType: GraphType;\n}\n\nclass GraphTypeButton extends Component<GraphTypeButtonProps, GraphTypeButtonState> {\n    constructor(props) {\n        super(props);\n        const { defaultType, options } = props;\n        this.state = {\n            selectedType: defaultType ? defaultType : options ? options[0] : GraphType.UNKNOWN\n        }\n    }\n\n    onSelect = (option) => {\n        this.setState({ selectedType: option })\n        this.props.onChange(option);\n    }\n\n    shouldComponentUpdate(nextProps: Readonly<GraphTypeButtonProps>): boolean {\n        return nextProps.defaultType !== this.state.selectedType;\n    }\n\n    componentDidUpdate(prevProps: Readonly<GraphTypeButtonProps>) {\n        const { defaultType } = this.props;\n        if (prevProps.defaultType !== defaultType) {\n            this.setState({ selectedType: defaultType });\n        }\n    }\n\n    render() {\n        const { selectedType } = this.state;\n        return (\n            <Dropdown className={styles.dropdown} onSelect={this.onSelect}>\n                <Dropdown.Toggle className={styles.toggle} variant=\"link\" disabled={this.props.disabled}>\n                    {selectedType}\n                </Dropdown.Toggle>\n\n                <Dropdown.Menu>\n                    {\n                        this.props.options.filter(option => option !== selectedType).map(option => {\n                            return <Dropdown.Item\n                                className={styles.option}\n                                key={option}\n                                eventKey={option}>\n                                {option}\n                            </Dropdown.Item>\n                        })\n                    }\n                </Dropdown.Menu>\n            </Dropdown>\n        )\n    }\n}\n\nexport default GraphTypeButton;","import React, { Component } from 'react';\nimport moment from 'moment';\nimport styles from '../../../../assets/sass/components/sleep/tooltips/ScatterTooltip.module.scss';\n\ninterface ScatterTooltipState {\n    active: boolean;\n    payload: any;\n}\n\nclass ScatterTooltip extends Component<{}, ScatterTooltipState> {\n    constructor(props) {\n        super(props);\n        this.state = {\n            active: false,\n            payload: null\n        }\n    }\n    \n    render() {\n        const { active, payload } = this.state;\n\n        if (active) {\n            return (\n                <div className={styles.wrapper}>\n                    <p className={styles.value}>\n                        <span className={styles.label}>Date: </span>\n                        {formatDate(payload[0].value)}\n                    </p>\n                    <p className={styles.value}>\n                        <span className={styles.label}>Duration: </span>\n                        {formatDuration(payload[1].value)}\n                    </p>\n                    <p className={styles.value}>\n                        <span className={styles.label}>Sleep Quality: </span>\n                        {formatSleepQuality(payload[2].value)}\n                    </p>\n                </div>\n            );\n        }\n    \n        return null;\n    }\n};\n\nfunction formatDate(date: string): string {\n    return moment(date).format(\"Mo MMM YYYY HH:MM\")\n}\n\nfunction formatDuration(duration: number): string {\n    return duration.toFixed(1) + \" hours\";\n}\n\nfunction formatSleepQuality(quality: number): string {\n    return quality + \"%\";\n}\n\nexport default ScatterTooltip;","export class Arrays {\n    static min = (arr: number[]) => arr.reduce((p, v) => (p < v ? p : v));\n    \n    static max = (arr: number[]) => arr.reduce((p, v) => (p > v ? p : v));\n}","import React, { Component } from \"react\";\nimport { CartesianGrid, ScatterChart, XAxis, YAxis, ZAxis, Tooltip, Scatter, Brush } from 'recharts';\nimport ScatterTooltip from \"../tooltips/ScatterTooltip\";\nimport { SleepGraphMainData } from \"./SleepGraph\";\nimport { Arrays } from '../../../../utility/Arrays';\nimport moment from \"moment\";\nimport GraphContainer from \"../../GraphContainer\";\nimport { AxisDomain } from \"recharts/types/util/types\";\n\ninterface SleepScatterGraphProps {\n    data: SleepGraphMainData[];\n    onSelectedSession: (session) => void;\n}\n\ninterface SleepScatterGraphState {\n    brushStartIndex: string;\n    brushEndIndex: string;\n}\n\nclass SleepScatterGraph extends Component<SleepScatterGraphProps, SleepScatterGraphState> {\n    constructor(props) {\n        super(props);\n        this.state = {\n            brushStartIndex: this.getEarliestDate(),\n            brushEndIndex: this.getBrushEndIndex()\n        }\n    }\n\n    onClickScatter = (selected) => {\n        this.props.onSelectedSession({\n            data: {\n                awakeTime: selected.awakeTime,\n                deepSleep: selected.deepSleep,\n                lightSleep: selected.lightSleep,\n                remSleep: selected.remSleep,\n                sleepQuality: selected.sleepQuality,\n            },\n            date: selected.date,\n            startTime: selected.startTime,\n            endTime: selected.endTime,\n            duration: selected.duration,\n            soundsRecorded: selected.soundsRecorded,\n            mood: selected.mood\n        });\n    }\n    \n    render() {\n        return (\n            <GraphContainer>\n                <ScatterChart data={this.props.data}>\n                    <CartesianGrid strokeDasharray=\"3 3\" />\n                    <XAxis dataKey=\"date\" name=\"Date\" type=\"category\" tickFormatter={this.xAxisFormatter} />\n                    <YAxis dataKey=\"duration\" name=\"Duration\" type=\"number\" unit=\" hrs\" domain={this.yAxisDomain()} />\n                    <ZAxis dataKey=\"sleepQuality\" range={[1, 300]} name=\"Sleep Quality\" unit=\"%\" />\n                    <Tooltip cursor={{ strokeDasharray: '3 3' }} content={props => <ScatterTooltip {...props} />} />\n                    <Brush\n                        dataKey='date'\n                        height={30}\n                        stroke=\"#8884d8\"\n                        tickFormatter={this.xAxisFormatter}\n                        endIndex={this.getBrushFilteredData().length}\n                        onChange={brush => this.setState({ brushStartIndex: brush.startIndex, brushEndIndex: brush.endIndex })}\n                    />\n                    <Scatter\n                        name=\"Sleep Sessions\"\n                        data={this.getBrushFilteredData()}\n                        fill=\"rgba(136, 132, 216, 0.7)\"\n                        onClick={this.onClickScatter}\n                        isAnimationActive={true}\n                        className={null}\n                    />\n                </ScatterChart>\n            </GraphContainer>\n        );\n    }\n\n    private getBrushFilteredData() {\n        const { brushStartIndex, brushEndIndex } = this.state;\n        return this.props.data.filter(datum => new Date(datum.date) >= new Date(brushStartIndex) && new Date(datum.date) <= new Date(brushEndIndex));\n    }\n\n    private getEarliestDate = () => this.props.data[0].date;\n    \n    private getBrushEndIndex() {\n        const { data } = this.props;\n        return data[Math.round(data.length / 5)].date;\n    }\n\n    private yAxisDomain(): AxisDomain {\n        const data = this.props.data;\n        const durations = data.map(e => e.duration);\n        const minDuration = Math.floor(Arrays.min(durations));\n        const maxDuration = Math.ceil(Arrays.max(durations));\n        return [minDuration, maxDuration];\n    }\n\n    private xAxisFormatter(tickItem: string) {\n        return moment(tickItem).format(\"MMM YY\")\n    }\n}\n\nexport default SleepScatterGraph;","import React, { Component } from 'react';\nimport moment from 'moment';\nimport styles from '../../../../assets/sass/components/sleep/tooltips/AreaTooltip.module.scss';\n\ninterface AreaTooltipState {\n    active: boolean;\n    payload: any;\n}\n\nclass AreaTooltip extends Component<{}, AreaTooltipState> {\n    constructor(props) {\n        super(props);\n        this.state = {\n            active: false,\n            payload: null\n        }\n    }\n\n    render() {\n        const { active, payload } = this.state;\n        if (active) {\n            return (\n                <div className={styles.wrapper}>\n                    <p className={styles.value}>\n                        <span className={styles.label}>Date: </span>\n                        {formatDate(payload[0].payload.date)}\n                    </p>\n    \n                    <p className={styles.value}>\n                        <span className={styles.label}>Sleep Quality: </span>\n                        {formatSleepQuality(payload[0].value)}\n                    </p>\n                </div>\n            );\n        }\n    \n        return null;\n    }\n};\n\nfunction formatDate(date: string): string {\n    return moment(date).format(\"Mo MMM YYYY HH:MM\")\n}\n\nfunction formatSleepQuality(value: number): string {\n    return value.toFixed(0) + \"%\";\n}\n\nexport default AreaTooltip;","export enum Mood {\n    GREAT = \"Great\",\n    GOOD = \"Good\",\n    OK = \"Ok\",\n    NOT_SO_GOOD = \"Not Good\",\n    BAD = \"Bad\",\n    UNKNOWN = \"N/A\"\n}","import React, {Component} from \"react\";\nimport {Area, AreaChart, Brush, CartesianGrid, Tooltip, XAxis, YAxis} from 'recharts';\nimport {AxisDomain} from \"recharts/types/util/types\";\nimport {SleepGraphMainData} from './SleepGraph';\nimport {Arrays} from '../../../../utility/Arrays';\nimport moment from \"moment\";\nimport GraphContainer from '../../GraphContainer';\nimport AreaTooltip from \"../tooltips/AreaTooltip\";\n\ninterface SleepAreaGraphProps {\n    data: SleepGraphMainData[];\n    onSelectedSession: (session) => void;\n}\n\nclass SleepAreaGraph extends Component<SleepAreaGraphProps> {\n    onClickArea = (selected) => {\n        const payload = selected.payload;\n        this.props.onSelectedSession({\n            data: {\n                awakeTime: payload.awakeTime,\n                deepSleep: payload.deepSleep,\n                lightSleep: payload.lightSleep,\n                remSleep: payload.remSleep,\n                sleepQuality: payload.sleepQuality,\n                mood: payload.mood\n            },\n            date: payload.date,\n            startTime: payload.startTime,\n            endTime: payload.endTime,\n            soundsRecorded: payload.soundsRecorded,\n            duration: payload.duration,\n            mood: payload.mood\n        });\n    }\n\n    render() {\n        return (\n            <GraphContainer>\n                <AreaChart data={this.props.data}>\n                    <CartesianGrid strokeDasharray=\"3 3\" />\n                    <XAxis dataKey=\"date\" name=\"Date\" tickFormatter={this.xAxisFormatter} />\n                    <YAxis type=\"number\" name=\"Sleep Quality\" unit=\"%\" domain={this.yAxisDomain()} />\n                    <Tooltip content={props => <AreaTooltip {...props}/>} />\n                    <Area\n                        type=\"monotone\"\n                        dataKey=\"sleepQuality\"\n                        stroke=\"#8884d8\"\n                        fill=\"#8884d8\"\n                        activeDot={{ onClick: this.onClickArea }}\n                        animationDuration={2200}\n                    />\n                    <Brush\n                        dataKey='date'\n                        height={30}\n                        stroke=\"#8884d8\"\n                        endIndex={this.getBrushEndIndex()}\n                        tickFormatter={this.xAxisFormatter}\n                    />\n                </AreaChart>\n            </GraphContainer>\n        )\n    }\n\n    private yAxisDomain(): AxisDomain {\n        const data = this.props.data;\n        const quality = data.map(e => e.sleepQuality);\n        const minQuality = Math.floor(Arrays.min(quality));\n        const maxQuality = Math.ceil(Arrays.max(quality));\n        return [minQuality - 5, maxQuality];\n    }\n\n    private xAxisFormatter = (tickItem: string) => moment(tickItem).format(\"MMM YY\")\n\n    private getBrushEndIndex = () => Math.round(this.props.data.length / 10)\n}\n\nexport default SleepAreaGraph;","import { faInfoCircle } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { OverlayTrigger, Tooltip } from 'react-bootstrap';\nimport React, { Component } from 'react';\nimport styles from '../../../assets/sass/components/sleep/Info.module.scss';\n\ninterface InfoProps {\n    text?: string;\n}\n\ninterface InfoState {\n    isActive: boolean;\n}\n\nclass Info extends Component<InfoProps, InfoState> {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isActive: false\n        }\n    }\n\n    render() {\n        return (\n            <OverlayTrigger\n                placement=\"right\"\n                delay={{ show: 100, hide: 250 }}\n                overlay={this.renderTooltip}>\n                <FontAwesomeIcon\n                    fixedWidth\n                    className={styles.icon}\n                    icon={faInfoCircle}\n                    onMouseEnter={() => this.setState({ isActive: true })}\n                    onMouseLeave={() => this.setState({ isActive: false })}\n                />\n            </OverlayTrigger>\n        );\n    }\n\n    renderTooltip = (props) => {\n        return (\n            <Tooltip className={styles.text} {...props}>\n                {this.props.text}\n            </Tooltip>\n        );\n    }\n\n};\n\nexport default Info;","import React, { Component } from 'react';\nimport { Container } from 'react-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faClock } from '@fortawesome/free-solid-svg-icons';\nimport styles from '../../../assets/sass/components/sleep/SleepDuration.module.scss';\n\ninterface SleepDurationProps {\n    duration: number;\n}\n\nclass SleepDuration extends Component<SleepDurationProps> {\n    render() {\n        return (\n            <Container className={styles.container}>\n                <FontAwesomeIcon icon={faClock} className={styles.icon} />\n            </Container>\n        );\n    }\n}\n\nexport default SleepDuration;","export enum SoundThreshold {\n    UPPER = 30,\n    MIDDLE = 10,\n    LOWER = 5,\n    FLOOR = 0\n}\n\nexport function getThreshold(quantity) {\n    if (quantity >= SoundThreshold.LOWER && quantity < SoundThreshold.MIDDLE) {\n        return SoundThreshold.LOWER;\n    }\n\n    if (quantity >= SoundThreshold.MIDDLE && quantity < SoundThreshold.UPPER) {\n        return SoundThreshold.MIDDLE;\n    }\n\n    if (quantity >= SoundThreshold.UPPER) {\n        return SoundThreshold.UPPER;\n    }\n\n    return SoundThreshold.FLOOR;\n}\n\n","import React, { Component } from \"react\";\nimport { Mood } from '../../../domain/Mood';\nimport { Container } from 'react-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faGrinBeam, faSmile, faMeh, faFrown, faTired, faMehBlank, } from '@fortawesome/free-solid-svg-icons';\nimport styles from '../../../assets/sass/components/sleep/WakeMood.module.scss';\n\ninterface WakeMoodProps {\n    mood: Mood;\n}\n\nclass WakeMood extends Component<WakeMoodProps> {\n    render() {\n        return (\n            <Container>\n                <FontAwesomeIcon icon={faGrinBeam} className={this.getClass(Mood.GREAT)} />\n                <FontAwesomeIcon icon={faSmile} className={this.getClass(Mood.GOOD)} />\n                <FontAwesomeIcon icon={faMeh} className={this.getClass(Mood.OK)} />\n                <FontAwesomeIcon icon={faFrown} className={this.getClass(Mood.NOT_SO_GOOD)} />\n                <FontAwesomeIcon icon={faTired} className={this.getClass(Mood.BAD)} />\n            </Container>\n        );\n    }\n\n    private getClass = (targetMood: Mood) => this.props.mood === targetMood ? styles.active : styles.inactive\n    \n}\n\nexport default WakeMood;","import React, { Component } from 'react';\nimport { Container, ProgressBar, Row, Col } from 'react-bootstrap';\nimport { SoundThreshold, getThreshold } from '../../../domain/SoundThreshold';\nimport { faVolumeUp, faVolumeMute } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport styles from '../../../assets/sass/components/sleep/SoundsRecorded.module.scss';\n\ninterface SoundsRecordedProps {\n    quantity: number;\n}\n\nclass SoundsRecorded extends Component<SoundsRecordedProps> {\n    render() {\n        return (\n            <Container>\n                <Row>\n                    <Col xs={3} className={styles.column}>\n                        <FontAwesomeIcon icon={faVolumeMute} fixedWidth className={this.getClass(SoundThreshold.FLOOR)} />\n                    </Col>\n                    <Col xs={6} className={styles.middleColumn}>\n                        <ProgressBar now={this.getBarFillPercentage()} className={styles.bar} />\n                    </Col>\n                    <Col xs={3} className={styles.column}>\n                        <FontAwesomeIcon icon={faVolumeUp} fixedWidth className={this.getClass(SoundThreshold.UPPER)} />\n                    </Col>\n                </Row>\n            </Container>\n        );\n    }\n\n    private getClass = (threshold: SoundThreshold) => getThreshold(this.props.quantity) === threshold ? styles.active : styles.inactive\n\n    private getBarFillPercentage() {\n        const threshold = getThreshold(this.props.quantity);\n        switch (threshold) {\n            case SoundThreshold.FLOOR: return 0;\n            case SoundThreshold.LOWER: return 25;\n            case SoundThreshold.MIDDLE: return 50;\n            case SoundThreshold.UPPER: return 75;\n            default: return 0;\n        }\n    }\n}\n\nexport default SoundsRecorded;","import React, { Component } from \"react\";\nimport { Container, Row, Col } from 'react-bootstrap';\nimport { Mood } from \"../../../domain/Mood\";\nimport SleepDuration from \"./SleepDuration\";\nimport WakeMood from './WakeMood';\nimport SoundsRecorded from './SoundsRecorded';\nimport styles from '../../../assets/sass/components/sleep/MiscInfo.module.scss'\n\ninterface MiscInfoProps {\n    data: MiscInfoData;\n}\n\nexport interface MiscInfoData {\n    soundsRecorded: number;\n    mood: Mood;\n    duration: number;\n}\n\nclass MiscInfo extends Component<MiscInfoProps> {\n    render() {\n        const { soundsRecorded, mood, duration } = this.props.data || {};\n\n        return (\n            <Container className={styles.container}>\n                <Row className={styles.row}>\n                    <Col xs={8}>\n                        <SoundsRecorded quantity={soundsRecorded} />\n                    </Col>\n                    <Col xs={4}>\n                        <h1 className={styles.value}>{soundsRecorded ? soundsRecorded : \"N/A\"}</h1>\n                        <h5 className={styles.title}>Sounds Recorded</h5>\n                    </Col>\n                </Row>\n                <Row className={styles.row}>\n                    <Col xs={8}>\n                        <WakeMood mood={mood}/>\n                    </Col>\n                    <Col xs={4}>\n                        <h1 className={styles.value}>{mood ? mood : \"N/A\"}</h1>\n                        <h5 className={styles.title}>Wake-Up Mood</h5>\n                    </Col>\n                </Row>\n                <Row className={styles.row}>\n                    <Col xs={8}>\n                        <SleepDuration duration={duration}/>\n                    </Col>\n                    <Col xs={4}>\n                        <h1 className={styles.value}>{duration ? duration.toFixed(1) + \"h\" : \"N/A\"}</h1>\n                        <h5 className={styles.title}>Duration Slept</h5>\n                    </Col>\n                </Row>\n            </Container>\n        );\n    }\n}\n\nexport default MiscInfo;","import React, { Component } from 'react';\nimport moment from 'moment';\nimport styles from '../../../../assets/sass/components/sleep/tooltips/BarTooltip.module.scss';\n\ninterface BarTooltipState {\n    active: boolean;\n    payload: any;\n}\n\nclass BarTooltip extends Component<{}, BarTooltipState> {\n    constructor(props) {\n        super(props);\n        this.state = {\n            active: false,\n            payload: null\n        }\n    }\n\n    render() {\n        const { active, payload } = this.state;\n\n        if (active) {\n            return (\n                <div className={styles.wrapper}>\n                    <p className={styles.value}>\n                        <span className={styles.label}>Date: </span>\n                        {formatDate(payload[0].payload.date)}\n                    </p>\n    \n                    <p className={styles.value}>\n                        <span className={styles.label}>Sleep Quality: </span>\n                        {formatSleepQuality(payload[0].value)}\n                    </p>\n                </div>\n            );\n        }\n    \n        return null;\n    }\n};\n\nfunction formatDate(date: string): string {\n    return moment(date).format(\"Mo MMM YYYY HH:MM\")\n}\n\nfunction formatSleepQuality(value: number): string {\n    return value.toFixed(0) + \"%\";\n}\n\nexport default BarTooltip;","import React, { Component } from \"react\";\nimport { SleepGraphMainData } from \"./SleepGraph\";\nimport GraphContainer from \"../../GraphContainer\";\nimport { BarChart, CartesianGrid, XAxis, YAxis, Tooltip, Bar, Brush } from 'recharts';\nimport moment from \"moment\";\nimport BarTooltip from \"../tooltips/BarTooltip\";\n\ninterface SleepBarGraphProps {\n    data: SleepGraphMainData[];\n    onSelectedSession: (session) => void;\n}\n\nclass SleepBarGraph extends Component<SleepBarGraphProps> {\n    onClickBar = (selected) => {\n        const payload = selected.payload;\n        this.props.onSelectedSession({\n            data: {\n                awakeTime: payload.awakeTime,\n                deepSleep: payload.deepSleep,\n                lightSleep: payload.lightSleep,\n                remSleep: payload.remSleep,\n                sleepQuality: payload.sleepQuality,\n                mood: payload.mood\n            },\n            date: payload.date,\n            startTime: payload.startTime,\n            endTime: payload.endTime,\n            soundsRecorded: payload.soundsRecorded,\n            duration: payload.duration,\n            mood: payload.mood\n        });\n    }\n\n    render() {\n        return (\n            <GraphContainer>\n                <BarChart data={this.props.data}>\n                    <CartesianGrid strokeDasharray=\"3 3\" />\n                    <XAxis dataKey=\"date\" name=\"Date\" tickFormatter={this.xAxisFormatter} />\n                    <YAxis unit=\"%\" name=\"Sleep Quality\" />\n                    <Tooltip content={(props) => <BarTooltip {...props} />} />\n                    <Brush\n                        dataKey='date'\n                        height={30}\n                        stroke=\"#8884d8\"\n                        endIndex={this.getBrushEndIndex()}\n                        tickFormatter={this.xAxisFormatter}\n                    />\n                    <Bar\n                        dataKey=\"sleepQuality\"\n                        fill=\"rgba(136, 132, 216, 0.6)\"\n                        stroke=\"#8884d8\"\n                        onClick={this.onClickBar}\n                        animationDuration={2200}\n                    />\n                </BarChart>\n            </GraphContainer>\n        );\n    }\n\n    private xAxisFormatter = (tickItem: string) => moment(tickItem).format(\"MMM YY\")\n\n    private getBrushEndIndex = () => Math.round(this.props.data.length / 20)\n}\n\nexport default SleepBarGraph;","export class Numbers {\n    static randomInt = (min, max) => Math.floor(Math.random() * (max - min + 1) + min);\n\n}","import React, {Component} from 'react';\nimport {Area, AreaChart, CartesianGrid, XAxis, YAxis} from 'recharts';\nimport moment from 'moment';\nimport GraphContainer from './GraphContainer';\nimport {Numbers} from \"../../utility/Numbers\";\n\ninterface DummyAreaGraphProps {\n    colour: string;\n    speed: number;\n    sampleSize: number;\n    dataBounds: [number, number];\n}\n\ninterface DummyAreaGraphState {\n    timeout: any;\n    data: FakeAreaData[];\n}\n\ninterface FakeAreaData {\n    value: number;\n    date: string;\n}\n\nclass DummyAreaGraph extends Component<DummyAreaGraphProps, DummyAreaGraphState> {\n    constructor(props) {\n        super(props);\n        this.state = {\n            timeout: undefined,\n            data: []\n        }\n    }\n\n    shift = () => this.setState(() => ({data: this.getFakeData()}))\n\n    componentDidMount() {\n        this.shift();\n        this.setState({timeout: setInterval(() => this.shift(), this.props.speed) });\n    }\n\n    componentWillUnmount() {\n        clearInterval(this.state.timeout);\n    }\n\n    render() {\n        const { colour, speed } = this.props;\n        return (\n            <GraphContainer>\n                <AreaChart data={this.state.data}>\n                    <CartesianGrid strokeDasharray=\"3 3\" />\n                    <XAxis dataKey=\"date\" name=\"Date\" tickFormatter={this.xAxisFormatter} />\n                    <YAxis type=\"number\" name=\"Sleep Quality\" unit=\"%\" />\n                    <Area\n                        type=\"monotone\"\n                        dataKey=\"value\"\n                        stroke={colour}\n                        fill={colour}\n                        animationDuration={speed}\n                        animationEasing=\"ease-in-out\"\n                        fillOpacity={0.4}\n                    />\n                </AreaChart>\n            </GraphContainer>\n        );\n    }\n\n    private getFakeData(): FakeAreaData[] {\n        const { sampleSize, dataBounds } = this.props;\n        return [...Array(sampleSize).keys()].map((i) => {\n            return {\n                value: Numbers.randomInt(dataBounds[0], dataBounds[1]),\n                date: moment().add(i, \"month\").toString()\n            }\n        });\n    }\n\n    private xAxisFormatter = (tickItem: string) => moment(tickItem).format(\"MMM YY\")\n}\n\nexport default DummyAreaGraph;","export class Colours {\n    static gradient(colorStart, colorEnd, colorCount): string[] {\n\n        // The beginning of your gradient\n        const start = Colours.convertToRGB(colorStart);\n\n        // The end of your gradient\n        const end = Colours.convertToRGB (colorEnd);\n\n        // The number of colors to compute\n        const len = colorCount;\n\n        //Alpha blending amount\n        let alpha = 0.0;\n\n        let colours = [];\n\n        for (let i = 0; i < len; i++) {\n            const c = [];\n            alpha += (1.0/len);\n\n            c[0] = start[0] * alpha + (1 - alpha) * end[0];\n            c[1] = start[1] * alpha + (1 - alpha) * end[1];\n            c[2] = start[2] * alpha + (1 - alpha) * end[2];\n\n            colours.push(Colours.convertToHex(c));\n        }\n\n        return colours;\n    }\n\n    private static hex (c): string {\n        const s = \"0123456789abcdef\";\n        let i = parseInt(c);\n        if (i === 0 || isNaN (c)) return \"00\";\n        i = Math.round (Math.min (Math.max (0, i), 255));\n        return s.charAt ((i - i % 16) / 16) + s.charAt (i % 16);\n    }\n\n    /* Convert an RGB triplet to a hex string */\n    private static convertToHex (rgb): string {\n        return \"#\" + Colours.hex(rgb[0]) + Colours.hex(rgb[1]) + Colours.hex(rgb[2]);\n    }\n\n    /* Remove '#' in color hex string */\n    private static trim = s => (s.charAt(0) === '#') ? s.substring(1, 7) : s;\n\n    /* Convert a hex string to an RGB triplet */\n    private static convertToRGB (hex): any[] {\n        const color = [];\n        color[0] = parseInt ((Colours.trim(hex)).substring (0, 2), 16);\n        color[1] = parseInt ((Colours.trim(hex)).substring (2, 4), 16);\n        color[2] = parseInt ((Colours.trim(hex)).substring (4, 6), 16);\n        return color;\n    }\n}","import React, {Component} from 'react';\nimport {Cell, Pie, PieChart} from 'recharts';\nimport moment from 'moment';\nimport GraphContainer from './GraphContainer';\nimport {Numbers} from \"../../utility/Numbers\";\nimport {Colours} from \"../../utility/Colours\";\n\ninterface DummyPieGraphProps {\n    gradient: [string, string];\n    speed: number;\n    sectors: number;\n    range: [number, number];\n}\n\ninterface DummyPieGraphState {\n    timeout: any;\n    data: FakePieData[];\n}\n\ninterface FakePieData {\n    name: string;\n    value: number;\n    fill: string;\n}\n\nclass DummyPieGraph extends Component<DummyPieGraphProps, DummyPieGraphState> {\n    constructor(props) {\n        super(props);\n        this.state = {\n            timeout: undefined,\n            data: []\n        }\n    }\n\n    shift = () => this.setState(() => ({data: this.getFakeData()}))\n\n    componentDidMount() {\n        this.shift();\n        this.setState({timeout: setInterval(() => this.shift(), this.props.speed) });\n    }\n\n    componentWillUnmount() {\n        clearInterval(this.state.timeout);\n    }\n\n    render() {\n        const { data } = this.state;\n        return (\n            <GraphContainer>\n                <PieChart>\n                    <Pie\n                        data={data}\n                        nameKey=\"name\"\n                        dataKey=\"value\"\n                        innerRadius=\"25%\"\n                        animationBegin={0}\n                        animationDuration={this.props.speed}\n                        animationEasing={\"ease-in-out\"}\n                        paddingAngle={2}\n                        fillOpacity={0.4}\n                        outerRadius={\"100%\"}\n                    >\n                        {this.getSectorColourMappings(data)}\n                    </Pie>\n                </PieChart>\n            </GraphContainer>\n        );\n    }\n\n    private getFakeData(): FakePieData[] {\n        const { sectors, range, gradient } = this.props;\n        const fills = Colours.gradient(gradient[0], gradient[1], sectors);\n        return [...Array(sectors).keys()].map((i) => {\n            return {\n                name: moment().add(i, \"month\").toString(),\n                value: Numbers.randomInt(range[0], range[1]),\n                fill: fills[i]\n            }\n        });\n    }\n\n    private getSectorColourMappings = data => data.map((entry, i) => <Cell key={`cell-${i}`} fill={entry.fill} />)\n}\n\nexport default DummyPieGraph;","import React, {Component} from 'react';\nimport {Card, Col, Row} from 'react-bootstrap';\nimport SleepQualityPieChart, {SleepQualityPieChartData} from \"./SleepQualityPieChart\";\nimport GraphTypeButton from '../GraphTypeButton';\nimport {GraphType} from '../../../../infrastructure/types/GraphType';\nimport SleepScatterGraph from './SleepScatterGraph';\nimport SleepAreaGraph from './SleepAreaGraph';\nimport Info from '../Info';\nimport MiscInfo, {MiscInfoData} from '../MiscInfo';\nimport {Mood} from '../../../../domain/Mood';\nimport moment from 'moment';\nimport SleepBarGraph from './SleepBarGraph';\nimport DummyAreaGraph from \"../../DummyAreaGraph\";\nimport DummyPieGraph from \"../../DummyPieGraph\";\n\ninterface SleepGraphMainProps {\n    data: SleepGraphMainData[]\n}\n\ninterface SleepGraphState {\n    selectedSessionData: SleepQualityPieChartData;\n    selectedSession: SelectedSessionInfo;\n    selectedGraphType: GraphType;\n}\n\ninterface SelectedSessionInfo {\n    date: string,\n    startTime: string,\n    endTime: string,\n    miscInfo: MiscInfoData\n}\n\nexport interface SleepGraphMainData {\n    date: string,\n    startTime: string,\n    endTime: string,\n    duration: number,\n    sleepQuality: number,\n    isNap: boolean,\n    awakeTime: number,\n    lightSleep: number,\n    deepSleep: number,\n    remSleep: number,\n    soundsRecorded: number,\n    mood: Mood\n}\n\nclass SleepGraph extends Component<SleepGraphMainProps, SleepGraphState> {\n    constructor(props) {\n        super(props);\n        this.state = {\n            selectedSessionData: undefined,\n            selectedSession: undefined,\n            selectedGraphType: GraphType.UNKNOWN\n        }\n    }\n\n    onClickSleepSession = (response) => {\n        const { data, date, startTime, endTime, soundsRecorded, duration, mood } = response;\n        this.setState({\n            selectedSessionData: data,\n            selectedSession: { date, startTime, endTime, miscInfo: { soundsRecorded, mood, duration } },\n        });\n    }\n\n    componentDidMount() {\n        const data = this.props.data;\n        this.setState({\n            selectedSessionData: data ? this.getMostRecentSleepSessionData(): undefined,\n            selectedSession: data ? this.getMostRecentSleepSession(): undefined,\n            selectedGraphType: data ? GraphType.AREA : GraphType.UNKNOWN\n        });\n    }\n\n    render() {\n        const { selectedGraphType, selectedSession, selectedSessionData } = this.state;\n        return (\n            <>\n                <Row>\n                    <Col xs={12}>\n                        <Card>\n                            <Card.Body>\n                                <Card.Title> Sleep Quality vs Duration\n                                    <Info text=\"Click a data point on the graph to display that session in detail below.\" />\n                                    <GraphTypeButton\n                                        options={[GraphType.SCATTER, GraphType.AREA, GraphType.BAR]}\n                                        onChange={(option) => this.setState({ selectedGraphType: option })}\n                                        defaultType={selectedGraphType}\n                                        disabled={!this.props.data}\n                                    />\n                                </Card.Title>\n                                {this.renderLeadingGraph()}\n                            </Card.Body>\n                        </Card>\n                    </Col>\n                </Row>\n\n                <Row>\n                    <Col md={6} sm={12}>\n                        <Card>\n                            <Card.Body>\n                                <Card.Title>{this.formatDateTitle()}</Card.Title>\n                                {this.props.data\n                                    ? <SleepQualityPieChart data={selectedSessionData}/>\n                                    : <DummyPieGraph gradient={[\"#8884d8\", \"#342de5\"]} speed={2000} sectors={6} range={[5, 25]}/>\n                                }\n                            </Card.Body>\n                        </Card>\n                    </Col>\n                    <Col md={6} sm={12}>\n                        <Card>\n                            <Card.Body>\n                                <Card.Title>Miscellaneous Information</Card.Title>\n                                <MiscInfo data={selectedSession ? selectedSession.miscInfo : null} />\n                            </Card.Body>\n                        </Card>\n                    </Col>\n                </Row>\n            </>\n        );\n    }\n\n    private formatDateTitle(): string {\n        const session = this.state.selectedSession;\n        if (!session) return \"Session Breakdown\";\n        const { date, startTime, endTime } = session;\n        return moment(date).format(\"dddd Do MMMM YYYY\") + \" (\" + startTime + \" - \" + endTime + \")\";\n    }\n\n    private getMostRecentSleepSessionData(): SleepGraphMainData {\n        return this.props.data.find(d => d.date === this.getMostRecentSleepSession().date);\n    }\n\n    private getMostRecentSleepSession(): SelectedSessionInfo {\n        const sessionData = this.props.data.reduce((a, b) => (new Date(a.date) > new Date(b.date) ? a : b));\n        const { date, startTime, endTime, soundsRecorded, mood, duration } = sessionData;\n        return { date, startTime, endTime, miscInfo: { soundsRecorded, mood, duration } };\n    }\n\n    private renderLeadingGraph() {\n        const { data } = this.props;\n\n        switch (this.state.selectedGraphType) {\n            case GraphType.SCATTER: {\n                return <SleepScatterGraph data={data} onSelectedSession={this.onClickSleepSession} />\n            }\n            case GraphType.AREA: {\n                return <SleepAreaGraph data={data} onSelectedSession={this.onClickSleepSession} />\n            }\n            case GraphType.BAR: {\n                return <SleepBarGraph data={data} onSelectedSession={this.onClickSleepSession} />\n            }\n            case GraphType.UNKNOWN: {\n                return <DummyAreaGraph colour={\"#8884d8\"} speed={3000} sampleSize={10} dataBounds={[25, 95]}/>\n            }\n        }\n    }\n}\n\nexport default SleepGraph;","import { faExclamationCircle, faPlug, faDizzy, faTimes } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport styles from \"../../assets/sass/components/layout/DisabledOverlay.module.scss\";\nimport {Numbers} from \"../../utility/Numbers\";\n\nconst DisabledOverlay = ({active}) => {\n    if (active) {\n        return(\n            <div className={styles.container}>\n                <div className={styles.wrapper}>\n                    <h3 className={styles.heading}>\n                        <FontAwesomeIcon icon={getRandomIcon()} className={styles.headingIcon}/> {getRandomHeading()}\n                    </h3>\n                    <div className={styles.break}/>\n                    <h4 className={styles.subtitle}>No data was received</h4>\n                    <span className={styles.description}>\n                        See the status{' '}\n                        <FontAwesomeIcon icon={faExclamationCircle} className={styles.referenceIcon}/>\n                        {' '}at the top right for more information\n                    </span>\n                </div>\n            </div>\n        );\n    }\n    return null;\n}\n\nfunction getRandomIcon() {\n    const icons = [faPlug, faDizzy, faTimes];\n    const i = Numbers.randomInt(0, icons.length - 1);\n    return icons[i];\n}\n\nfunction getRandomHeading() {\n    const messages = [\"Oops!\", \"Oh No!\", \"Chotto Matte!\", \"Nani?!\"];\n    const i = Numbers.randomInt(0, messages.length - 1);\n    return messages[i];\n}\n\nexport default DisabledOverlay;","import React, { Component } from 'react';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport {faBed, faClock, faMicrophone, faSmile} from '@fortawesome/free-solid-svg-icons';\nimport { SleepGraphMainData } from '../components/sleep/graphs/SleepGraph';\nimport LoadingSpinner from '../layout/LoadingSpinner';\nimport SleepInfoCard from '../components/sleep/SleepInfoCard';\nimport { SleepService } from '../../application/service/SleepService';\nimport SleepGraph from '../components/sleep/graphs/SleepGraph';\nimport DisabledOverlay from \"../layout/DisabledOverlay\";\nimport styles from '../../assets/sass/pages/Sleep.module.scss';\n\ninterface SleepState {\n    sleepData: SleepGraphMainData[]\n    loading: boolean;\n}\n\nclass Sleep extends Component<{}, SleepState> {\n    constructor(props) {\n        super(props);\n        this.state = {\n            sleepData: undefined,\n            loading: true\n        }\n    }\n\n    async componentDidMount() {\n        this.setState({ loading: true });\n        const data = await new SleepService().initialise();\n        this.setState({ sleepData: data, loading: false });\n    }\n\n    render() {\n        const { sleepData, loading } = this.state\n\n        return (\n            <Container fluid>\n                <LoadingSpinner active={loading}/>\n                <DisabledOverlay active={!loading && !sleepData}/>\n                <p className={styles.desc}>Visualising the data recorded by the iOS\n                    <a href={\"https://pillow.app/\"} target={\"_blank\"} rel={\"noreferrer\"} className={styles.link}> Pillow </a>\n                    app from my Apple watch.\n                </p>\n\n                <Row>\n                    <Col lg={3} md={6} sm={12}>\n                        <SleepInfoCard title=\"Sessions\" value={this.getSleepSessionQuantity()} icon={faBed} />\n                    </Col>\n                    <Col lg={3} md={6} sm={12}>\n                        <SleepInfoCard title=\"Avg Quality\" value={this.getAvgSleepQuality()} unit=\"%\" icon={faSmile} />\n                    </Col>\n                    <Col lg={3} md={6} sm={12}>\n                        <SleepInfoCard title=\"Hours Slept\" value={this.getTotalHoursSlept()} icon={faClock} />\n                    </Col>\n                    <Col lg={3} md={6} sm={12}>\n                        <SleepInfoCard title=\"Sounds Recorded\" value={this.getSoundsSum()} icon={faMicrophone} />\n                    </Col>\n                </Row>\n\n                <SleepGraph key={\"\" + loading} data={sleepData} />\n            </Container>\n        )\n    }\n\n    private getAvgSleepQuality(): number {\n        const { sleepData } = this.state;\n        if (!sleepData) return 0;\n        let sum = this.state.sleepData.map(e => e.sleepQuality).reduce((sum, val) => sum + val, 0);\n        return Number((sum / this.getSleepSessionQuantity()).toFixed(1));\n    }\n\n    private getSleepSessionQuantity(): number {\n        const { sleepData } = this.state;\n        return sleepData ? sleepData.length : 0;\n    }\n\n    private getTotalHoursSlept(): number {\n        const { sleepData } = this.state;\n        if (!sleepData) return 0;\n        const hours = sleepData.map(e => e.duration).reduce((sum, val) => sum + val, 0);\n        return Math.round(hours);\n    }\n\n    private getSoundsSum(): number {\n        const { sleepData } = this.state;\n        if (!sleepData) return 0;\n        const sounds = sleepData.map(it => it.soundsRecorded).reduce((sum, val) => sum + val, 0);\n        return Math.round(sounds);\n    }\n}\n\nexport default Sleep;","import React, { Component } from \"react\";\nimport { ComposedChart, ResponsiveContainer, XAxis, YAxis, Tooltip, Legend, CartesianGrid, Area, Bar, Line } from 'recharts';\nimport { Container } from 'react-bootstrap';\n\nexport interface OverviewGraphProps {\n    data: OverviewGraphData[]\n}\n\nexport interface OverviewGraphData {\n    'Type': string,\n    'Start': string,\n    'End': string,\n    'Duration': string,\n    'Distance': string,\n    'Average Heart Rate': number,\n    'Max Heart Rate': number,\n    'Average Pace': string,\n    'Average Speed': number,\n    'Active Energy': number,\n    'Total Energy': number,\n    'Elevation Ascended': number,\n    'Elevation Descended': number,\n    'Weather Temperature': string,\n    'Weather Humidity': string\n}\n\nclass OverviewGraph extends Component<OverviewGraphProps> {\n    render() {\n        return (\n            <Container>\n                <ResponsiveContainer width=\"100%\" height={350}>\n                    <ComposedChart height={325} data={this.extractOverviewData()}>\n                        <XAxis dataKey=\"Date\" angle={-45} textAnchor=\"end\"/>\n                        <YAxis domain={[0, 1200]}/>\n                        <Tooltip />\n                        <Legend />\n                        <CartesianGrid stroke=\"#f5f5f5\" />\n                        <Area type=\"monotone\" dataKey=\"Duration\" fill=\"#8884d8\" stroke=\"#8884d8\" />\n                        <Bar dataKey=\"Calories Burnt\" barSize={4} />\n                        <Line type=\"monotone\" dataKey=\"Average Heart Rate\" stroke=\"#ff7300\" />\n                    </ComposedChart>\n                </ResponsiveContainer>\n            </Container>\n        )\n    }\n\n    extractOverviewData() {\n        const data = this.props.data.filter(e => e[\"Duration\"] && e[\"Average Heart Rate\"] && e[\"Total Energy\"] && e[\"Start\"]); //Filter falsy/invalid values out.\n        const filtered = data.map(datum => {\n            const extracted = Object.keys(datum)\n            .filter(key => [\"Duration\", \"Average Heart Rate\", \"Total Energy\", \"Start\"].includes(key))\n            .reduce((obj, key) => {\n                obj[key] = datum[key];\n                return obj;\n            }, {});\n            return {\n                'Duration': extracted['Duration'].split(\":\")[1],\n                'Average Heart Rate': Number(extracted['Average Heart Rate']).toFixed(2),\n                'Calories Burnt': Number(extracted['Total Energy']).toFixed(2),\n                'Date': extracted['Start'].split(\" \")[0]\n            }\n        });\n        return filtered.slice(0, 50);\n    }\n}\n\nexport default OverviewGraph;","import { Card, Container } from 'react-bootstrap';\nimport React, { Component } from 'react';\nimport OverviewGraph, {OverviewGraphData} from \"../components/overview/OverviewGraph\";\nimport CsvFileReader from \"../../infrastructure/CsvFileReader\";\n\ninterface OverviewState {\n    workouts: OverviewGraphData[]\n}\n\nclass Overview extends Component<{}, OverviewState> {\n    constructor(props) {\n        super(props);\n        this.state = {\n            workouts: undefined\n        }\n    }\n\n    async componentWillMount() {\n        //const csv = new CsvFileReader().read('workouts.csv', ',');\n        this.setState({ workouts: undefined });\n    }\n\n    render() {\n        const { workouts } = this.state;\n        return (\n            <Container fluid>\n                <p>This is the overview page.</p>\n\n                <Card>\n                    <Card.Body>\n                        { workouts && <OverviewGraph data={workouts} /> }\n                    </Card.Body>\n\n                </Card>\n            </Container>\n        );\n    }\n}\n\nexport default Overview;","import React, { Component } from \"react\";\nimport { Container } from \"react-bootstrap\";\n\nclass Running extends Component {\n    render() {\n        return (\n            <Container fluid>\n                <p>This is the running page.</p>\n            </Container>\n        );\n    }\n}\n\nexport default Running;","import React, { Component } from \"react\";\nimport { Container } from \"react-bootstrap\";\n\nclass Gym extends Component {\n    render() {\n        return (\n            <Container fluid>\n                <p>This is the gym page.</p>\n            </Container>\n        );\n    }\n}\n\nexport default Gym;","import { Container } from \"react-bootstrap\";\nimport React from \"react\";\nimport styles from '../../assets/sass/pages/NotFound.module.scss';\n\nconst NotFound = () => {\n    return (\n        <Container fluid className={styles.container}>\n            <h1 className={styles.number}>\n                404\n            </h1>\n            <h3 className={styles.text}>Page not found.</h3>\n        </Container>\n    );\n}\n\n\n\nexport default NotFound;","import React from \"react\";\nimport { Route } from 'react-router-dom';\nimport nprogress from 'nprogress';\nimport NProgress from 'nprogress';\n\nNProgress.configure({ showSpinner: false, easing: 'ease' })\n\nconst ProgressRoute = props => {\n\n    React.useState(nprogress.start());\n\n    React.useEffect(() => {\n        nprogress.done();\n        return () => nprogress.start();\n    });\n\n    return (\n        <Route {...props} />\n    );\n};\n\nexport default ProgressRoute;","import React, { Component } from 'react';\nimport Header from './Header';\nimport Footer from './Footer';\nimport Menu from './Menu';\nimport { Row, Col, Container } from 'react-bootstrap';\nimport { Switch } from 'react-router-dom';\nimport Sleep from '../pages/Sleep';\nimport Overview from \"../pages/Overview\";\nimport Running from \"../pages/Running\";\nimport Gym from \"../pages/Gym\";\nimport NotFound from \"../pages/NotFound\";\nimport ProgressRoute from \"../components/ProgressRoute\";\nimport styles from '../../assets/sass/components/layout/Main.module.scss'\n\nclass MainLayout extends Component {\n    render() {\n        return (\n            <Container fluid className={styles.wrapper}>\n                <Row className={styles.row}>\n                    <Header />\n                </Row>\n\n                <Row className={styles.row}>\n                    <div className={styles.sidebar}>\n                        <Menu />\n                    </div>\n                    <Col className={styles.content}>\n                        <Switch>\n                            <ProgressRoute path='/' component={Overview} exact />\n                            <ProgressRoute path='/running' component={Running} />\n                            <ProgressRoute path='/gym' component={Gym} />\n                            <ProgressRoute path='/sleep' component={Sleep} />\n                            <ProgressRoute component={NotFound} />\n                        </Switch>\n                    </Col>\n                </Row>\n\n                <Footer />\n            </Container>\n        );\n    }\n}\n\nexport default MainLayout;","import React, { Component } from \"react\";\nimport { Container } from \"react-bootstrap\";\n\ninterface ErrorBoundaryState {\n\thasError: boolean;\n\terror: any;\n}\n\nclass ErrorBoundary extends Component<{}, ErrorBoundaryState> {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\thasError: false,\n\t\t\terror: null\n\t\t};\n\t}\n\n\tstatic getDerivedStateFromError(error) {\n\t\treturn { hasError: true };\n\t}\n\n\tcomponentDidCatch(error, info) {\n\t\tthis.setState({ hasError: true, error});\n\t}\n\n\trender() {\n\t\tif (this.state.hasError) {\n\t\t\treturn (\n\t\t\t\t<Container>\n\t\t\t\t\t<h1>It do be broken.</h1>\n\t\t\t\t\t<h2>{this.state.error}</h2>\n\t\t\t\t</Container>\n\t\t\t);\n\t\t}\n\t\treturn this.props.children;\n\t}\n}\n\nexport default ErrorBoundary;","import 'bootstrap/dist/css/bootstrap.min.css';\nimport './assets/sass/global/styles.scss';\nimport './assets/sass/global/activity-rings.scss';\nimport './assets/sass/global/recharts.scss';\nimport './assets/sass/global/react-bootstrap.scss';\nimport 'nprogress/nprogress.css';\nimport '@fortawesome/fontawesome-svg-core/styles.css'\nimport { config } from \"@fortawesome/fontawesome-svg-core\";\nimport MainLayout from './presentation/layout/Main';\nimport React from 'react';\nimport { HashRouter } from 'react-router-dom'\nimport ErrorBoundary from './presentation/pages/ErrorBoundary';\n\nconfig.autoAddCss = false;\n\nconst ActivityTrendsApplication = (props) => {\n    return (\n        <HashRouter basename={process.env.REACT_APP_BASE_PATH}>\n            <ErrorBoundary key={props.location?.pathName}>\n                <MainLayout/>\n            </ErrorBoundary>\n        </HashRouter>\n    );\n}\n\nexport default ActivityTrendsApplication;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport ActivityTrendsApplication from './ActivityTrendsApplication';\n\nReactDOM.render(\n  <React.StrictMode>\n    <ActivityTrendsApplication />\n  </React.StrictMode>,\n  document.getElementById('root')\n);","// extracted by mini-css-extract-plugin\nmodule.exports = {\"svg\":\"ActivityRings_svg__3xMpO\",\"ring\":\"ActivityRings_ring__1EcWw\",\"completed\":\"ActivityRings_completed__2umDB\",\"RingProgress\":\"ActivityRings_RingProgress__20VZO\",\"move\":\"ActivityRings_move__2SKMQ\",\"background\":\"ActivityRings_background__28Tnz\",\"exercise\":\"ActivityRings_exercise__11PvZ\",\"stand\":\"ActivityRings_stand__13D_z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"MiscInfo_container__s9ssh\",\"row\":\"MiscInfo_row__9KiXf\",\"value\":\"MiscInfo_value__4jS53\",\"icon\":\"MiscInfo_icon__2uXUg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"DisabledOverlay_container__16IFv\",\"wrapper\":\"DisabledOverlay_wrapper__q9yIP\",\"heading\":\"DisabledOverlay_heading__35RZE\",\"referenceIcon\":\"DisabledOverlay_referenceIcon__efsK1\",\"headingIcon\":\"DisabledOverlay_headingIcon__1siV3\",\"subtitle\":\"DisabledOverlay_subtitle__3M5_h\",\"description\":\"DisabledOverlay_description__2rUo2\",\"break\":\"DisabledOverlay_break__51iVw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"icon\":\"SleepInfoCard_icon__Hmh5r\",\"circle\":\"SleepInfoCard_circle__1BRq-\",\"value\":\"SleepInfoCard_value__1sEjn\",\"title\":\"SleepInfoCard_title__3xRaZ\",\"row\":\"SleepInfoCard_row__37Zfv\",\"card\":\"SleepInfoCard_card__2jqpn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"ScatterTooltip_label__2wU6a\",\"value\":\"ScatterTooltip_value__1K7gi\",\"wrapper\":\"ScatterTooltip_wrapper__2MhtB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"active\":\"SoundsRecorded_active__3pEt8\",\"inactive\":\"SoundsRecorded_inactive__1u9J1\",\"column\":\"SoundsRecorded_column__16RtC\",\"middleColumn\":\"SoundsRecorded_middleColumn__232YJ\",\"bar\":\"SoundsRecorded_bar__rX0zo\"};"],"sourceRoot":""}