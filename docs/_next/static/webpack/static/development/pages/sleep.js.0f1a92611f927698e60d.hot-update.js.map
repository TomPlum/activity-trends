{"version":3,"file":"static/webpack/static\\development\\pages\\sleep.js.0f1a92611f927698e60d.hot-update.js","sources":["webpack:///./assets/sass/components/sleep/sleepinfocard.module.scss?1c19","webpack:///./assets/sass/components/sleep/sleepinfocard.module.scss","webpack:///./pages/sleep.tsx","webpack:///./src/components/sleep/SleepGraph.tsx","webpack:///./src/components/sleep/SleepInfoCard.tsx"],"sourcesContent":["var content = require(\"!!../../../../node_modules/css-loader/dist/cjs.js??ref--5-oneOf-3-1!../../../../node_modules/next/dist/compiled/postcss-loader/index.js??__nextjs_postcss!../../../../node_modules/resolve-url-loader/index.js??ref--5-oneOf-3-3!../../../../node_modules/sass-loader/dist/cjs.js??ref--5-oneOf-3-4!./sleepinfocard.module.scss\");\n\nif (typeof content === 'string') {\n  content = [[module.id, content, '']];\n}\n\nvar options = {}\n\noptions.insert = function(element){// These elements should always exist. If they do not,\n// this code should fail.\nvar anchorElement=document.querySelector('#__next_css__DO_NOT_USE__');var parentNode=anchorElement.parentNode;// Normally <head>\n// Each style tag should be placed right before our\n// anchor. By inserting before and not after, we do not\n// need to track the last inserted element.\nparentNode.insertBefore(element,anchorElement)// Remember: this is development only code.\n//\n// After styles are injected, we need to remove the\n// <style> tags that set `body { display: none; }`.\n//\n// We use `requestAnimationFrame` as a way to defer\n// this operation since there may be multiple style\n// tags.\n;(self.requestAnimationFrame||setTimeout)(function(){for(var x=document.querySelectorAll('[data-next-hide-fouc]'),i=x.length;i--;){x[i].parentNode.removeChild(x[i]);}});};\noptions.singleton = false;\n\nvar update = require(\"!../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\")(content, options);\n\nif (content.locals) {\n  module.exports = content.locals;\n}\n\nif (module.hot) {\n  if (!content.locals) {\n    module.hot.accept(\n      \"!!../../../../node_modules/css-loader/dist/cjs.js??ref--5-oneOf-3-1!../../../../node_modules/next/dist/compiled/postcss-loader/index.js??__nextjs_postcss!../../../../node_modules/resolve-url-loader/index.js??ref--5-oneOf-3-3!../../../../node_modules/sass-loader/dist/cjs.js??ref--5-oneOf-3-4!./sleepinfocard.module.scss\",\n      function () {\n        var newContent = require(\"!!../../../../node_modules/css-loader/dist/cjs.js??ref--5-oneOf-3-1!../../../../node_modules/next/dist/compiled/postcss-loader/index.js??__nextjs_postcss!../../../../node_modules/resolve-url-loader/index.js??ref--5-oneOf-3-3!../../../../node_modules/sass-loader/dist/cjs.js??ref--5-oneOf-3-4!./sleepinfocard.module.scss\");\n\n        if (typeof newContent === 'string') {\n          newContent = [[module.id, newContent, '']];\n        }\n        \n        update(newContent);\n      }\n    )\n  }\n\n  module.hot.dispose(function() { \n    update();\n  });\n}","exports = module.exports = require(\"../../../../node_modules/css-loader/dist/runtime/api.js\")(true);\n// Module\nexports.push([module.id, \".sleepinfocard_icon__2L3TV {\\n  background: rgba(147, 108, 255, 0.849);\\n  font-size: large;\\n  padding: 30px;\\n  border-radius: 50%;\\n  margin: auto;\\n  display: block; }\\n\\n.sleepinfocard_value__3myxc, .sleepinfocard_title__3xDBw {\\n  display: block;\\n  text-align: left; }\\n\\n.sleepinfocard_title__3xDBw {\\n  color: rgba(0, 0, 0, 0.8); }\\n\\n.sleepinfocard_value__3myxc {\\n  margin: 0;\\n  font-weight: 600; }\\n\\n.sleepinfocard_card__3Qlcr {\\n  padding: 25px;\\n  margin-bottom: 15px; }\\n\", \"\",{\"version\":3,\"sources\":[\"H:/git/activity-trends/assets/sass/components/sleep/sleepinfocard.module.scss\"],\"names\":[],\"mappings\":\"AAEA;EACI,sCAHqC;EAIrC,gBAAgB;EAChB,aAAa;EACb,kBAAkB;EAClB,YAAY;EACZ,cAAc,EAAA;;AAGlB;EACI,cAAc;EACd,gBAAgB,EAAA;;AAGpB;EACI,yBAAyB,EAAA;;AAG7B;EACI,SAAS;EACT,gBAAgB,EAAA;;AAGpB;EACI,aAAa;EACb,mBAAmB,EAAA\",\"file\":\"sleepinfocard.module.scss\",\"sourcesContent\":[\"$inner-purple: rgba(147, 108, 255, 0.849);\\r\\n\\r\\n.icon {\\r\\n    background: $inner-purple;\\r\\n    font-size: large;\\r\\n    padding: 30px;\\r\\n    border-radius: 50%;\\r\\n    margin: auto;\\r\\n    display: block;\\r\\n}\\r\\n\\r\\n.value, .title {\\r\\n    display: block;\\r\\n    text-align: left;\\r\\n}\\r\\n\\r\\n.title {\\r\\n    color: rgba(0, 0, 0, 0.8);\\r\\n}\\r\\n\\r\\n.value {\\r\\n    margin: 0;\\r\\n    font-weight: 600;\\r\\n}\\r\\n\\r\\n.card {\\r\\n    padding: 25px;\\r\\n    margin-bottom: 15px;\\r\\n}\"]}]);\n// Exports\nexports.locals = {\n\t\"icon\": \"sleepinfocard_icon__2L3TV\",\n\t\"value\": \"sleepinfocard_value__3myxc\",\n\t\"title\": \"sleepinfocard_title__3xDBw\",\n\t\"card\": \"sleepinfocard_card__3Qlcr\"\n};","import { Component } from 'react';\r\nimport DataRepository from '../src/repository/DataRepository';\r\nimport SleepDataConverter from '../src/converters/SleepDataConverter';\r\nimport SleepGraph, { SleepGraphData } from '../src/components/sleep/SleepGraph';\r\nimport { CardDeck, Card, DropdownButton, Dropdown } from 'react-bootstrap';\r\nimport { faBed, faClock, faSmile } from '@fortawesome/free-solid-svg-icons';\r\nimport SleepInfoCard from '../src/components/sleep/SleepInfoCard';\r\nimport styles from '../assets/sass/pages/sleep.module.scss';\r\n\r\ninterface SleepProps {\r\n    sleepData: SleepGraphData[]\r\n}\r\n\r\nclass Sleep extends Component<SleepProps> {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <p>This is the sleep page</p>\r\n\r\n                <CardDeck>\r\n                    <SleepInfoCard\r\n                        title=\"Sleep Sessions\"\r\n                        value={this.getSleepSessionQuantity()}\r\n                        icon={faBed}\r\n                    />\r\n                    <SleepInfoCard\r\n                        title=\"Average Sleep Quality\"\r\n                        value={this.getAverageSleepQuality()}\r\n                        icon={faSmile}\r\n                    />\r\n                    <SleepInfoCard\r\n                        title=\"Hours Slept\"\r\n                        value={this.getTotalHoursSlept()}\r\n                        icon={faClock}\r\n                    />\r\n                </CardDeck>\r\n                <Card>\r\n                    <Card.Body>\r\n                        <Card.Title>Sleep Quality vs Time</Card.Title>\r\n                        <SleepGraph data={this.props.sleepData} />\r\n                    </Card.Body>\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    private getAverageSleepQuality() {\r\n        let sum = this.props.sleepData.map(e => e.sleepQuality).reduce((sum, val) => sum + val, 0);\r\n        return (sum / this.getSleepSessionQuantity()).toFixed(1) + \"%\";\r\n    }\r\n\r\n    private getSleepSessionQuantity() {\r\n        return this.props.sleepData.length;\r\n    }\r\n\r\n    private getTotalHoursSlept() {\r\n        const data = this.props.sleepData;\r\n        const hours = data.map(e => e.duration).reduce((sum, val) => sum + val, 0);\r\n        return Math.round(hours);\r\n    }\r\n\r\n}\r\n\r\nexport async function getStaticProps() {\r\n    const csv = new DataRepository().read('sleep.csv', ', ');\r\n    const converter = new SleepDataConverter();\r\n    const data = converter.convert(csv.data);\r\n    const graphData = converter.convertToGraphData(data);\r\n    return {\r\n        props: {\r\n            sleepData: graphData\r\n        }\r\n    }\r\n}\r\n\r\nexport default Sleep;","import { Component } from 'react';\r\nimport moment from 'moment';\r\nimport { ScatterChart, ResponsiveContainer, CartesianGrid, XAxis, YAxis, ZAxis, Tooltip, Legend, Scatter } from 'recharts';\r\n\r\ninterface SleepGraphProps {\r\n    data: SleepGraphData[]\r\n}\r\n\r\nexport interface SleepData {\r\n    startDate: string,\r\n    endDate: string,\r\n    duration: number,\r\n    isNap: boolean,\r\n    sleepQuality: number,\r\n    awakeTime: number,\r\n    remSleep: number,\r\n    lightSleep: number,\r\n    deepSleep: number,\r\n    soundsRecorded: number,\r\n    mood: string\r\n}\r\n\r\nexport interface SleepGraphData {\r\n    date: string,\r\n    duration: number,\r\n    sleepQuality: number,\r\n    isNap: boolean\r\n}\r\n\r\nclass SleepGraph extends Component<SleepGraphProps> {\r\n    render() {\r\n        return (\r\n            <ResponsiveContainer width=\"100%\" height={350}>\r\n                <ScatterChart>\r\n                    <CartesianGrid strokeDasharray=\"3 3\" />\r\n                    <XAxis dataKey=\"date\" name=\"Date\" tickFormatter={this.xAxisFormatter} />\r\n                    <YAxis dataKey=\"duration\" name=\"Duration\" type=\"number\" unit=\" hrs\" domain={this.yAxisDomain()} />\r\n                    <ZAxis dataKey=\"sleepQuality\" range={[1, 100]} name=\"Sleep Quality\" unit=\"%\" />\r\n                    <Tooltip cursor={{ strokeDasharray: '3 3' }} />\r\n                    <Legend />\r\n                    <Scatter name=\"Sleep Sessions\" data={this.props.data} fill=\"#8884d8\" />\r\n                </ScatterChart>\r\n            </ResponsiveContainer>\r\n        )\r\n    }\r\n\r\n    private yAxisDomain(): number[] {\r\n        const data = this.props.data;\r\n        const durations = data.map(e => e.duration);\r\n        const minDuration = Math.floor(this.arrayMin(durations));\r\n        const maxDuration = Math.ceil(this.arrayMax(durations));\r\n        return [minDuration, maxDuration];\r\n    }\r\n\r\n    private arrayMin(arr: number[]) {\r\n        return arr.reduce((p, v) => (p < v ? p : v));\r\n    }\r\n\r\n    private arrayMax(arr: number[]) {\r\n        return arr.reduce((p, v) => (p > v ? p : v));\r\n    }\r\n\r\n    private xAxisFormatter(tickItem: string) {\r\n        return moment(tickItem).format(\"MMM YY\")\r\n    }\r\n}\r\n\r\nexport default SleepGraph;","import { Component } from 'react';\r\nimport { Card, Row, Col } from 'react-bootstrap';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { IconDefinition } from '@fortawesome/fontawesome-svg-core';\r\nimport styles from '../../../assets/sass/components/sleep/sleepinfocard.module.scss';\r\n\r\nexport interface SleepInfoCardProps {\r\n    value: number | string,\r\n    title: string,\r\n    icon: IconDefinition\r\n}\r\n\r\nclass SleepInfoCard extends Component<SleepInfoCardProps> {\r\n    render() {\r\n        const { value, title, icon } = this.props;\r\n        return (\r\n            <Card className={styles.card}>\r\n                <Row>\r\n                    <Col md={4}>\r\n                        <FontAwesomeIcon icon={icon} className={styles.icon} />\r\n                    </Col>\r\n                    <Col>\r\n                        <h2 className={styles.value}>{value}</h2>\r\n                        <h6 className={styles.title}>{title}</h6>\r\n                    </Col>\r\n                </Row>\r\n            </Card>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SleepInfoCard;"],"mappings":"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","sourceRoot":""}