{"version":3,"file":"static/webpack/static\\development\\pages\\sleep.js.0805a4bacf81432e7225.hot-update.js","sources":["webpack:///./pages/sleep.tsx"],"sourcesContent":["import { Component } from 'react';\r\nimport DataRepository from '../src/repository/DataRepository';\r\nimport SleepDataConverter from '../src/converters/SleepDataConverter';\r\nimport SleepGraph, { SleepGraphData } from '../src/components/sleep/SleepGraph';\r\nimport { CardDeck, Card } from 'react-bootstrap';\r\nimport { faBed, faClock, faSmile } from '@fortawesome/free-solid-svg-icons';\r\nimport SleepInfoCard from '../src/components/sleep/SleepInfoCard';\r\nimport styles from '../assets/sass/pages/sleep.module.scss';\r\n\r\ninterface SleepProps {\r\n    sleepData: SleepGraphData[]\r\n}\r\n\r\nclass Sleep extends Component<SleepProps> {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <p>This is the sleep page</p>\r\n\r\n                <CardDeck>\r\n                    <SleepInfoCard\r\n                        title=\"Sleep Sessions\"\r\n                        value={this.getSleepSessionQuantity()}\r\n                        icon={faBed}\r\n                    />\r\n                    <SleepInfoCard\r\n                        title=\"Average Sleep Quality\"\r\n                        value={this.getAverageSleepQuality()}\r\n                        icon={faSmile}\r\n                    />\r\n                    <SleepInfoCard\r\n                        title=\"Hours Slept\"\r\n                        value={this.getTotalHoursSlept()}\r\n                        icon={faClock}\r\n                    />\r\n                </CardDeck>\r\n                <Card>\r\n                    <Card.Body>\r\n                    <Card.Title>Sleep Quality vs Time</Card.Title>\r\n                        <SleepGraph data={this.props.sleepData} />\r\n                    </Card.Body>\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    private getAverageSleepQuality() {\r\n        let sum = this.props.sleepData.map(e => e.sleepQuality).reduce((sum, val) => sum + val, 0);\r\n        return (sum / this.getSleepSessionQuantity()).toFixed(1) + \"%\";\r\n    }\r\n\r\n    private getSleepSessionQuantity() {\r\n        return this.props.sleepData.length;\r\n    }\r\n\r\n    private getTotalHoursSlept() {\r\n        const data = this.props.sleepData;\r\n        const hours = data.map(e => e.duration).reduce((sum, val) => sum + val, 0);\r\n        return Math.round(hours);\r\n    }\r\n\r\n}\r\n\r\nexport async function getStaticProps() {\r\n    const csv = new DataRepository().read('sleep.csv', ', ');\r\n    const converter = new SleepDataConverter();\r\n    const data = converter.convert(csv.data);\r\n    const graphData = converter.convertToGraphData(data);\r\n    return {\r\n        props: {\r\n            sleepData: graphData\r\n        }\r\n    }\r\n}\r\n\r\nexport default Sleep;"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAGA;AACA;AACA;AACA;AACA;AAMA;;;;;;;;;;;;;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;;;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;;;AAEA;AACA;AACA;;;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;;;;AA9CA;AACA;;AA6DA;;;;A","sourceRoot":""}